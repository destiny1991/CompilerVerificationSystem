预处理源代码开始...(test7.c)
预处理源代码结束
词法分析开始...
预处理源代码开始...(func1.h)
预处理源代码结束
预处理源代码开始...(func1.c)
预处理源代码结束
预处理源代码开始...(func2.h)
预处理源代码结束
预处理源代码开始...(func2.c)
预处理源代码结束
词法分析结束!
====================Source C Code==================
#include <stdio.h>
#include <ctype.h>
#include "func1.h"
#include "func2.h"

int inc(int x);

int main() {
    int a, b, c;
    int d;
    int e;

    a = 1;
    b = 2;
    c = add(a, 3);
    d = sub(a, c, b);
    e = inc(4);

    printf("The add result is : %d\n", c);
    printf("The sub result is : %d\n", d);
    return 0;
}

int inc(int x) {
    int z;
    z = x + 1;
    return z;
}

====================Labeled C Code==================
#include <stdio.h>                                // 1
#include <ctype.h>                                // 2
#include "func1.h"                                // 3
#include "func2.h"                                // 4

int inc(int x);                                   // 5

int main() {                                      // 6
    int a, b, c;                                  // 6.1
    int d;                                        // 6.2
    int e;                                        // 6.3

    a = 1;                                        // 6.4
    b = 2;                                        // 6.5
    c = add(a, 3);                                // 6.6
    d = sub(a, c, b);                             // 6.7
    e = inc(4);                                   // 6.8

    printf("The add result is : %d\n", c);        // 6.9
    printf("The sub result is : %d\n", d);        // 6.10
    return 0;                                     // 6.11
}                                                 // 7

int inc(int x) {                                  // 8
    int z;                                        // 8.1
    z = x + 1;                                    // 8.2
    return z;                                     // 8.3
}                                                 // 9

====================Lexer==================
(#, SHARP, 1)
(include, INCLUDE, 1)
(<, LT, 1)
(stdio.h, IDENTIFIER, 1)
(>, GT, 1)
(#, SHARP, 2)
(include, INCLUDE, 2)
(<, LT, 2)
(ctype.h, IDENTIFIER, 2)
(>, GT, 2)
(#, SHARP, 3)
(include, INCLUDE, 3)
(", DOUBLE_QUOTE, 3)
(func1.h, IDENTIFIER, 3)
(", DOUBLE_QUOTE, 3)
(#, SHARP, 4)
(include, INCLUDE, 4)
(", DOUBLE_QUOTE, 4)
(func2.h, IDENTIFIER, 4)
(", DOUBLE_QUOTE, 4)
(int, INT, 5)
(inc, IDENTIFIER, 5)
((, LL_BRACKET, 5)
(int, INT, 5)
(x, IDENTIFIER, 5)
(), RL_BRACKET, 5)
(;, SEMICOLON, 5)
(int, INT, 6)
(main, IDENTIFIER, 6)
((, LL_BRACKET, 6)
(), RL_BRACKET, 6)
({, LB_BRACKET, 6)
(int, INT, 6.1)
(a, IDENTIFIER, 6.1)
(,, COMMA, 6.1)
(b, IDENTIFIER, 6.1)
(,, COMMA, 6.1)
(c, IDENTIFIER, 6.1)
(;, SEMICOLON, 6.1)
(int, INT, 6.2)
(d, IDENTIFIER, 6.2)
(;, SEMICOLON, 6.2)
(int, INT, 6.3)
(e, IDENTIFIER, 6.3)
(;, SEMICOLON, 6.3)
(a, IDENTIFIER, 6.4)
(=, ASSIGN, 6.4)
(1, DIGIT_CONSTANT, 6.4)
(;, SEMICOLON, 6.4)
(b, IDENTIFIER, 6.5)
(=, ASSIGN, 6.5)
(2, DIGIT_CONSTANT, 6.5)
(;, SEMICOLON, 6.5)
(c, IDENTIFIER, 6.6)
(=, ASSIGN, 6.6)
(add, IDENTIFIER, 6.6)
((, LL_BRACKET, 6.6)
(a, IDENTIFIER, 6.6)
(,, COMMA, 6.6)
(3, DIGIT_CONSTANT, 6.6)
(), RL_BRACKET, 6.6)
(;, SEMICOLON, 6.6)
(d, IDENTIFIER, 6.7)
(=, ASSIGN, 6.7)
(sub, IDENTIFIER, 6.7)
((, LL_BRACKET, 6.7)
(a, IDENTIFIER, 6.7)
(,, COMMA, 6.7)
(c, IDENTIFIER, 6.7)
(,, COMMA, 6.7)
(b, IDENTIFIER, 6.7)
(), RL_BRACKET, 6.7)
(;, SEMICOLON, 6.7)
(e, IDENTIFIER, 6.8)
(=, ASSIGN, 6.8)
(inc, IDENTIFIER, 6.8)
((, LL_BRACKET, 6.8)
(4, DIGIT_CONSTANT, 6.8)
(), RL_BRACKET, 6.8)
(;, SEMICOLON, 6.8)
(printf, IDENTIFIER, 6.9)
((, LL_BRACKET, 6.9)
(", DOUBLE_QUOTE, 6.9)
(The add result is : %d\n, STRING_CONSTANT, 6.9)
(", DOUBLE_QUOTE, 6.9)
(,, COMMA, 6.9)
(c, IDENTIFIER, 6.9)
(), RL_BRACKET, 6.9)
(;, SEMICOLON, 6.9)
(printf, IDENTIFIER, 6.10)
((, LL_BRACKET, 6.10)
(", DOUBLE_QUOTE, 6.10)
(The sub result is : %d\n, STRING_CONSTANT, 6.10)
(", DOUBLE_QUOTE, 6.10)
(,, COMMA, 6.10)
(d, IDENTIFIER, 6.10)
(), RL_BRACKET, 6.10)
(;, SEMICOLON, 6.10)
(return, RETURN, 6.11)
(0, DIGIT_CONSTANT, 6.11)
(;, SEMICOLON, 6.11)
(}, RB_BRACKET, 7)
(int, INT, 8)
(inc, IDENTIFIER, 8)
((, LL_BRACKET, 8)
(int, INT, 8)
(x, IDENTIFIER, 8)
(), RL_BRACKET, 8)
({, LB_BRACKET, 8)
(int, INT, 8.1)
(z, IDENTIFIER, 8.1)
(;, SEMICOLON, 8.1)
(z, IDENTIFIER, 8.2)
(=, ASSIGN, 8.2)
(x, IDENTIFIER, 8.2)
(+, PLUS, 8.2)
(1, DIGIT_CONSTANT, 8.2)
(;, SEMICOLON, 8.2)
(return, RETURN, 8.3)
(z, IDENTIFIER, 8.3)
(;, SEMICOLON, 8.3)
(}, RB_BRACKET, 9)
(#, SHARP, 10)
(include, INCLUDE, 10)
(<, LT, 10)
(stdio.h, IDENTIFIER, 10)
(>, GT, 10)
(int, INT, 11)
(add, IDENTIFIER, 11)
((, LL_BRACKET, 11)
(int, INT, 11)
(x, IDENTIFIER, 11)
(,, COMMA, 11)
(int, INT, 11)
(y, IDENTIFIER, 11)
(), RL_BRACKET, 11)
(;, SEMICOLON, 11)
(#, SHARP, 12)
(include, INCLUDE, 12)
(<, LT, 12)
(stdio.h, IDENTIFIER, 12)
(>, GT, 12)
(#, SHARP, 13)
(include, INCLUDE, 13)
(", DOUBLE_QUOTE, 13)
(func1.h, IDENTIFIER, 13)
(", DOUBLE_QUOTE, 13)
(int, INT, 14)
(add, IDENTIFIER, 14)
((, LL_BRACKET, 14)
(int, INT, 14)
(x, IDENTIFIER, 14)
(,, COMMA, 14)
(int, INT, 14)
(y, IDENTIFIER, 14)
(), RL_BRACKET, 14)
({, LB_BRACKET, 14)
(int, INT, 14.1)
(z, IDENTIFIER, 14.1)
(;, SEMICOLON, 14.1)
(z, IDENTIFIER, 14.2)
(=, ASSIGN, 14.2)
(x, IDENTIFIER, 14.2)
(+, PLUS, 14.2)
(y, IDENTIFIER, 14.2)
(;, SEMICOLON, 14.2)
(printf, IDENTIFIER, 14.3)
((, LL_BRACKET, 14.3)
(", DOUBLE_QUOTE, 14.3)
(add function %d\n, STRING_CONSTANT, 14.3)
(", DOUBLE_QUOTE, 14.3)
(,, COMMA, 14.3)
(z, IDENTIFIER, 14.3)
(), RL_BRACKET, 14.3)
(;, SEMICOLON, 14.3)
(printf, IDENTIFIER, 14.4)
((, LL_BRACKET, 14.4)
(", DOUBLE_QUOTE, 14.4)
(add x %d, y %d\n, STRING_CONSTANT, 14.4)
(", DOUBLE_QUOTE, 14.4)
(,, COMMA, 14.4)
(x, IDENTIFIER, 14.4)
(,, COMMA, 14.4)
(y, IDENTIFIER, 14.4)
(), RL_BRACKET, 14.4)
(;, SEMICOLON, 14.4)
(printf, IDENTIFIER, 14.5)
((, LL_BRACKET, 14.5)
(", DOUBLE_QUOTE, 14.5)
(addd addd\n, STRING_CONSTANT, 14.5)
(", DOUBLE_QUOTE, 14.5)
(), RL_BRACKET, 14.5)
(;, SEMICOLON, 14.5)
(return, RETURN, 14.6)
(z, IDENTIFIER, 14.6)
(;, SEMICOLON, 14.6)
(}, RB_BRACKET, 15)
(#, SHARP, 16)
(include, INCLUDE, 16)
(<, LT, 16)
(stdio.h, IDENTIFIER, 16)
(>, GT, 16)
(int, INT, 17)
(sub, IDENTIFIER, 17)
((, LL_BRACKET, 17)
(int, INT, 17)
(x, IDENTIFIER, 17)
(,, COMMA, 17)
(int, INT, 17)
(y, IDENTIFIER, 17)
(,, COMMA, 17)
(int, INT, 17)
(d, IDENTIFIER, 17)
(), RL_BRACKET, 17)
(;, SEMICOLON, 17)
(#, SHARP, 18)
(include, INCLUDE, 18)
(<, LT, 18)
(stdio.h, IDENTIFIER, 18)
(>, GT, 18)
(#, SHARP, 19)
(include, INCLUDE, 19)
(", DOUBLE_QUOTE, 19)
(func2.h, IDENTIFIER, 19)
(", DOUBLE_QUOTE, 19)
(int, INT, 20)
(sub, IDENTIFIER, 20)
((, LL_BRACKET, 20)
(int, INT, 20)
(x, IDENTIFIER, 20)
(,, COMMA, 20)
(int, INT, 20)
(y, IDENTIFIER, 20)
(,, COMMA, 20)
(int, INT, 20)
(d, IDENTIFIER, 20)
(), RL_BRACKET, 20)
({, LB_BRACKET, 20)
(int, INT, 20.1)
(z, IDENTIFIER, 20.1)
(;, SEMICOLON, 20.1)
(z, IDENTIFIER, 20.2)
(=, ASSIGN, 20.2)
(x, IDENTIFIER, 20.2)
(-, MINUS, 20.2)
(y, IDENTIFIER, 20.2)
(-, MINUS, 20.2)
(d, IDENTIFIER, 20.2)
(;, SEMICOLON, 20.2)
(printf, IDENTIFIER, 20.3)
((, LL_BRACKET, 20.3)
(", DOUBLE_QUOTE, 20.3)
(sub function %d\n, STRING_CONSTANT, 20.3)
(", DOUBLE_QUOTE, 20.3)
(,, COMMA, 20.3)
(z, IDENTIFIER, 20.3)
(), RL_BRACKET, 20.3)
(;, SEMICOLON, 20.3)
(return, RETURN, 20.4)
(z, IDENTIFIER, 20.4)
(;, SEMICOLON, 20.4)
(}, RB_BRACKET, 21)

语法分析开始...
  include语句 : 语法合法
  include语句 : 语法合法
  include语句 : 语法合法
  include语句 : 语法合法
  inc函数定义 : 语法合法
  变量声明语句 : 语法合法
  变量声明语句 : 语法合法
  变量声明语句 : 语法合法
  表达式语句 : 语法合法
  赋值语句 : 语法合法
  表达式语句 : 语法合法
  赋值语句 : 语法合法
  函数调用语句 : 语法合法
  赋值语句 : 语法合法
  函数调用语句 : 语法合法
  赋值语句 : 语法合法
  函数调用语句 : 语法合法
  赋值语句 : 语法合法
  函数调用语句 : 语法合法
  函数调用语句 : 语法合法
  表达式语句 : 语法合法
  return语句 : 语法合法
  main函数定义 : 语法合法
  变量声明语句 : 语法合法
  表达式语句 : 语法合法
  赋值语句 : 语法合法
  表达式语句 : 语法合法
  return语句 : 语法合法
  inc函数定义 : 语法合法
  include语句 : 语法合法
  add函数定义 : 语法合法
  include语句 : 语法合法
  include语句 : 语法合法
  变量声明语句 : 语法合法
  表达式语句 : 语法合法
  赋值语句 : 语法合法
  函数调用语句 : 语法合法
  函数调用语句 : 语法合法
  函数调用语句 : 语法合法
  表达式语句 : 语法合法
  return语句 : 语法合法
  add函数定义 : 语法合法
  include语句 : 语法合法
  sub函数定义 : 语法合法
  include语句 : 语法合法
  include语句 : 语法合法
  变量声明语句 : 语法合法
  表达式语句 : 语法合法
  赋值语句 : 语法合法
  函数调用语句 : 语法合法
  表达式语句 : 语法合法
  return语句 : 语法合法
  sub函数定义 : 语法合法
语法分析结束!
====================Parser==================
( self: Sentence null null, father: null, left: null, right: null )
( self: Include null null, father: Sentence, left: null, right: Include )
( self: # SHARP 1_in, father: Include, left: null, right: include )
( self: include INCLUDE 1_in, father: Include, left: #, right: < )
( self: < LT 1_in, father: Include, left: include, right: stdio.h )
( self: stdio.h IDENTIFIER 1_in, father: Include, left: <, right: > )
( self: > GT 1_in, father: Include, left: stdio.h, right: null )
( self: Include null null, father: Sentence, left: Include, right: Include )
( self: # SHARP 2_in, father: Include, left: null, right: include )
( self: include INCLUDE 2_in, father: Include, left: #, right: < )
( self: < LT 2_in, father: Include, left: include, right: ctype.h )
( self: ctype.h IDENTIFIER 2_in, father: Include, left: <, right: > )
( self: > GT 2_in, father: Include, left: ctype.h, right: null )
( self: Include null null, father: Sentence, left: Include, right: Include )
( self: # SHARP 3_in, father: Include, left: null, right: include )
( self: include INCLUDE 3_in, father: Include, left: #, right: " )
( self: " DOUBLE_QUOTE 3_in, father: Include, left: include, right: func1.h )
( self: func1.h IDENTIFIER 3_in, father: Include, left: ", right: " )
( self: " DOUBLE_QUOTE 3_in, father: Include, left: func1.h, right: null )
( self: Include null null, father: Sentence, left: Include, right: FunctionStatement )
( self: # SHARP 4_in, father: Include, left: null, right: include )
( self: include INCLUDE 4_in, father: Include, left: #, right: " )
( self: " DOUBLE_QUOTE 4_in, father: Include, left: include, right: func2.h )
( self: func2.h IDENTIFIER 4_in, father: Include, left: ", right: " )
( self: " DOUBLE_QUOTE 4_in, father: Include, left: func2.h, right: null )
( self: FunctionStatement null null, father: Sentence, left: Include, right: FunctionStatement )
( self: Type null null, father: FunctionStatement, left: null, right: FunctionName )
( self: int FIELD_TYPE 5_fs, father: Type, left: null, right: null )
( self: FunctionName null null, father: FunctionStatement, left: Type, right: FunctionParameterList )
( self: inc IDENTIFIER 5_fs, father: FunctionName, left: null, right: null )
( self: FunctionParameterList null null, father: FunctionStatement, left: FunctionName, right: SEMICOLON )
( self: Parameter null null, father: FunctionParameterList, left: null, right: null )
( self: int FIELD_TYPE 5_fs, father: Parameter, left: null, right: x )
( self: x IDENTIFIER 5_fs, father: Parameter, left: int, right: null )
( self: SEMICOLON null null, father: FunctionStatement, left: FunctionParameterList, right: null )
( self: FunctionStatement null null, father: Sentence, left: FunctionStatement, right: FunctionStatement )
( self: Type null null, father: FunctionStatement, left: null, right: FunctionName )
( self: int FIELD_TYPE 6_fs, father: Type, left: null, right: null )
( self: FunctionName null null, father: FunctionStatement, left: Type, right: FunctionParameterList )
( self: main IDENTIFIER 6_fs, father: FunctionName, left: null, right: null )
( self: FunctionParameterList null null, father: FunctionStatement, left: FunctionName, right: Sentence )
( self: Sentence null null, father: FunctionStatement, left: FunctionParameterList, right: null )
( self: Statement null null, father: Sentence, left: null, right: Statement )
( self: Type null null, father: Statement, left: null, right: a )
( self: int FIELD_TYPE 6.1_st, father: Type, left: null, right: null )
( self: a IDENTIFIER 6.1_st, father: Statement, left: Type, right: null )
( self: Statement null null, father: Sentence, left: Statement, right: Statement )
( self: Type null null, father: Statement, left: null, right: b )
( self: int FIELD_TYPE null, father: Type, left: null, right: null )
( self: b IDENTIFIER 6.1_st, father: Statement, left: Type, right: null )
( self: Statement null null, father: Sentence, left: Statement, right: Statement )
( self: Type null null, father: Statement, left: null, right: c )
( self: int FIELD_TYPE null, father: Type, left: null, right: null )
( self: c IDENTIFIER 6.1_st, father: Statement, left: Type, right: null )
( self: Statement null null, father: Sentence, left: Statement, right: Statement )
( self: Type null null, father: Statement, left: null, right: d )
( self: int FIELD_TYPE 6.2_st, father: Type, left: null, right: null )
( self: d IDENTIFIER 6.2_st, father: Statement, left: Type, right: null )
( self: Statement null null, father: Sentence, left: Statement, right: Assignment )
( self: Type null null, father: Statement, left: null, right: e )
( self: int FIELD_TYPE 6.3_st, father: Type, left: null, right: null )
( self: e IDENTIFIER 6.3_st, father: Statement, left: Type, right: null )
( self: Assignment null null, father: Sentence, left: Statement, right: Assignment )
( self: a IDENTIFIER 6.4_as, father: Assignment, left: null, right: Expression )
( self: Expression SingleOrDoubleOperand null, father: Assignment, left: a, right: null )
( self: Expression Constant null, father: Expression, left: null, right: null )
( self: 1 _Constant 6.4_ex, father: Expression, left: null, right: null )
( self: Assignment null null, father: Sentence, left: Assignment, right: Assignment )
( self: b IDENTIFIER 6.5_as, father: Assignment, left: null, right: Expression )
( self: Expression SingleOrDoubleOperand null, father: Assignment, left: b, right: null )
( self: Expression Constant null, father: Expression, left: null, right: null )
( self: 2 _Constant 6.5_ex, father: Expression, left: null, right: null )
( self: Assignment null null, father: Sentence, left: Assignment, right: Assignment )
( self: c IDENTIFIER 6.6_as, father: Assignment, left: null, right: FunctionCall )
( self: FunctionCall null null, father: Assignment, left: c, right: null )
( self: add FUNCTION_NAME 6.6_fc, father: FunctionCall, left: null, right: CallParameterList )
( self: CallParameterList null null, father: FunctionCall, left: add, right: null )
( self: a IDENTIFIER 6.6_fc, father: CallParameterList, left: null, right: 3 )
( self: 3 DIGIT_CONSTANT 6.6_fc, father: CallParameterList, left: a, right: null )
( self: Assignment null null, father: Sentence, left: Assignment, right: Assignment )
( self: d IDENTIFIER 6.7_as, father: Assignment, left: null, right: FunctionCall )
( self: FunctionCall null null, father: Assignment, left: d, right: null )
( self: sub FUNCTION_NAME 6.7_fc, father: FunctionCall, left: null, right: CallParameterList )
( self: CallParameterList null null, father: FunctionCall, left: sub, right: null )
( self: a IDENTIFIER 6.7_fc, father: CallParameterList, left: null, right: c )
( self: c IDENTIFIER 6.7_fc, father: CallParameterList, left: a, right: b )
( self: b IDENTIFIER 6.7_fc, father: CallParameterList, left: c, right: null )
( self: Assignment null null, father: Sentence, left: Assignment, right: FunctionCall )
( self: e IDENTIFIER 6.8_as, father: Assignment, left: null, right: FunctionCall )
( self: FunctionCall null null, father: Assignment, left: e, right: null )
( self: inc FUNCTION_NAME 6.8_fc, father: FunctionCall, left: null, right: CallParameterList )
( self: CallParameterList null null, father: FunctionCall, left: inc, right: null )
( self: 4 DIGIT_CONSTANT 6.8_fc, father: CallParameterList, left: null, right: null )
( self: FunctionCall null null, father: Sentence, left: Assignment, right: FunctionCall )
( self: printf FUNCTION_NAME 6.9_fc, father: FunctionCall, left: null, right: CallParameterList )
( self: CallParameterList null null, father: FunctionCall, left: printf, right: null )
( self: The add result is : %d\n STRING_CONSTANT 6.9_fc, father: CallParameterList, left: null, right: c )
( self: c IDENTIFIER 6.9_fc, father: CallParameterList, left: The add result is : %d\n, right: null )
( self: FunctionCall null null, father: Sentence, left: FunctionCall, right: Return )
( self: printf FUNCTION_NAME 6.10_fc, father: FunctionCall, left: null, right: CallParameterList )
( self: CallParameterList null null, father: FunctionCall, left: printf, right: null )
( self: The sub result is : %d\n STRING_CONSTANT 6.10_fc, father: CallParameterList, left: null, right: d )
( self: d IDENTIFIER 6.10_fc, father: CallParameterList, left: The sub result is : %d\n, right: null )
( self: Return null null, father: Sentence, left: FunctionCall, right: null )
( self: return RETURN 6.11_re, father: Return, left: null, right: Expression )
( self: Expression SingleOrDoubleOperand null, father: Return, left: return, right: null )
( self: Expression Constant null, father: Expression, left: null, right: null )
( self: 0 _Constant 6.11_ex, father: Expression, left: null, right: null )
( self: FunctionStatement null null, father: Sentence, left: FunctionStatement, right: Include )
( self: Type null null, father: FunctionStatement, left: null, right: FunctionName )
( self: int FIELD_TYPE 8_fs, father: Type, left: null, right: null )
( self: FunctionName null null, father: FunctionStatement, left: Type, right: FunctionParameterList )
( self: inc IDENTIFIER 8_fs, father: FunctionName, left: null, right: null )
( self: FunctionParameterList null null, father: FunctionStatement, left: FunctionName, right: Sentence )
( self: Parameter null null, father: FunctionParameterList, left: null, right: null )
( self: int FIELD_TYPE 8_fs, father: Parameter, left: null, right: x )
( self: x IDENTIFIER 8_fs, father: Parameter, left: int, right: null )
( self: Sentence null null, father: FunctionStatement, left: FunctionParameterList, right: null )
( self: Statement null null, father: Sentence, left: null, right: Assignment )
( self: Type null null, father: Statement, left: null, right: z )
( self: int FIELD_TYPE 8.1_st, father: Type, left: null, right: null )
( self: z IDENTIFIER 8.1_st, father: Statement, left: Type, right: null )
( self: Assignment null null, father: Sentence, left: Statement, right: Return )
( self: z IDENTIFIER 8.2_as, father: Assignment, left: null, right: Expression )
( self: Expression SingleOrDoubleOperand null, father: Assignment, left: z, right: null )
( self: Expression Variable null, father: Expression, left: null, right: Expression )
( self: x _Variable 8.2_ex, father: Expression, left: null, right: null )
( self: Expression Constant null, father: Expression, left: Expression, right: Operator )
( self: 1 _Constant 8.2_ex, father: Expression, left: null, right: null )
( self: Operator Operator null, father: Expression, left: Expression, right: null )
( self: + _Operator 8.2_ex, father: Operator, left: null, right: null )
( self: Return null null, father: Sentence, left: Assignment, right: null )
( self: return RETURN 8.3_re, father: Return, left: null, right: Expression )
( self: Expression SingleOrDoubleOperand null, father: Return, left: return, right: null )
( self: Expression Variable null, father: Expression, left: null, right: null )
( self: z _Variable 8.3_ex, father: Expression, left: null, right: null )
( self: Include null null, father: Sentence, left: FunctionStatement, right: FunctionStatement )
( self: # SHARP 10_in, father: Include, left: null, right: include )
( self: include INCLUDE 10_in, father: Include, left: #, right: < )
( self: < LT 10_in, father: Include, left: include, right: stdio.h )
( self: stdio.h IDENTIFIER 10_in, father: Include, left: <, right: > )
( self: > GT 10_in, father: Include, left: stdio.h, right: null )
( self: FunctionStatement null null, father: Sentence, left: Include, right: Include )
( self: Type null null, father: FunctionStatement, left: null, right: FunctionName )
( self: int FIELD_TYPE 11_fs, father: Type, left: null, right: null )
( self: FunctionName null null, father: FunctionStatement, left: Type, right: FunctionParameterList )
( self: add IDENTIFIER 11_fs, father: FunctionName, left: null, right: null )
( self: FunctionParameterList null null, father: FunctionStatement, left: FunctionName, right: SEMICOLON )
( self: Parameter null null, father: FunctionParameterList, left: null, right: Parameter )
( self: int FIELD_TYPE 11_fs, father: Parameter, left: null, right: x )
( self: x IDENTIFIER 11_fs, father: Parameter, left: int, right: null )
( self: Parameter null null, father: FunctionParameterList, left: Parameter, right: null )
( self: int FIELD_TYPE 11_fs, father: Parameter, left: null, right: y )
( self: y IDENTIFIER 11_fs, father: Parameter, left: int, right: null )
( self: SEMICOLON null null, father: FunctionStatement, left: FunctionParameterList, right: null )
( self: Include null null, father: Sentence, left: FunctionStatement, right: Include )
( self: # SHARP 12_in, father: Include, left: null, right: include )
( self: include INCLUDE 12_in, father: Include, left: #, right: < )
( self: < LT 12_in, father: Include, left: include, right: stdio.h )
( self: stdio.h IDENTIFIER 12_in, father: Include, left: <, right: > )
( self: > GT 12_in, father: Include, left: stdio.h, right: null )
( self: Include null null, father: Sentence, left: Include, right: FunctionStatement )
( self: # SHARP 13_in, father: Include, left: null, right: include )
( self: include INCLUDE 13_in, father: Include, left: #, right: " )
( self: " DOUBLE_QUOTE 13_in, father: Include, left: include, right: func1.h )
( self: func1.h IDENTIFIER 13_in, father: Include, left: ", right: " )
( self: " DOUBLE_QUOTE 13_in, father: Include, left: func1.h, right: null )
( self: FunctionStatement null null, father: Sentence, left: Include, right: Include )
( self: Type null null, father: FunctionStatement, left: null, right: FunctionName )
( self: int FIELD_TYPE 14_fs, father: Type, left: null, right: null )
( self: FunctionName null null, father: FunctionStatement, left: Type, right: FunctionParameterList )
( self: add IDENTIFIER 14_fs, father: FunctionName, left: null, right: null )
( self: FunctionParameterList null null, father: FunctionStatement, left: FunctionName, right: Sentence )
( self: Parameter null null, father: FunctionParameterList, left: null, right: Parameter )
( self: int FIELD_TYPE 14_fs, father: Parameter, left: null, right: x )
( self: x IDENTIFIER 14_fs, father: Parameter, left: int, right: null )
( self: Parameter null null, father: FunctionParameterList, left: Parameter, right: null )
( self: int FIELD_TYPE 14_fs, father: Parameter, left: null, right: y )
( self: y IDENTIFIER 14_fs, father: Parameter, left: int, right: null )
( self: Sentence null null, father: FunctionStatement, left: FunctionParameterList, right: null )
( self: Statement null null, father: Sentence, left: null, right: Assignment )
( self: Type null null, father: Statement, left: null, right: z )
( self: int FIELD_TYPE 14.1_st, father: Type, left: null, right: null )
( self: z IDENTIFIER 14.1_st, father: Statement, left: Type, right: null )
( self: Assignment null null, father: Sentence, left: Statement, right: FunctionCall )
( self: z IDENTIFIER 14.2_as, father: Assignment, left: null, right: Expression )
( self: Expression SingleOrDoubleOperand null, father: Assignment, left: z, right: null )
( self: Expression Variable null, father: Expression, left: null, right: Expression )
( self: x _Variable 14.2_ex, father: Expression, left: null, right: null )
( self: Expression Variable null, father: Expression, left: Expression, right: Operator )
( self: y _Variable 14.2_ex, father: Expression, left: null, right: null )
( self: Operator Operator null, father: Expression, left: Expression, right: null )
( self: + _Operator 14.2_ex, father: Operator, left: null, right: null )
( self: FunctionCall null null, father: Sentence, left: Assignment, right: FunctionCall )
( self: printf FUNCTION_NAME 14.3_fc, father: FunctionCall, left: null, right: CallParameterList )
( self: CallParameterList null null, father: FunctionCall, left: printf, right: null )
( self: add function %d\n STRING_CONSTANT 14.3_fc, father: CallParameterList, left: null, right: z )
( self: z IDENTIFIER 14.3_fc, father: CallParameterList, left: add function %d\n, right: null )
( self: FunctionCall null null, father: Sentence, left: FunctionCall, right: FunctionCall )
( self: printf FUNCTION_NAME 14.4_fc, father: FunctionCall, left: null, right: CallParameterList )
( self: CallParameterList null null, father: FunctionCall, left: printf, right: null )
( self: add x %d, y %d\n STRING_CONSTANT 14.4_fc, father: CallParameterList, left: null, right: x )
( self: x IDENTIFIER 14.4_fc, father: CallParameterList, left: add x %d, y %d\n, right: y )
( self: y IDENTIFIER 14.4_fc, father: CallParameterList, left: x, right: null )
( self: FunctionCall null null, father: Sentence, left: FunctionCall, right: Return )
( self: printf FUNCTION_NAME 14.5_fc, father: FunctionCall, left: null, right: CallParameterList )
( self: CallParameterList null null, father: FunctionCall, left: printf, right: null )
( self: addd addd\n STRING_CONSTANT 14.5_fc, father: CallParameterList, left: null, right: null )
( self: Return null null, father: Sentence, left: FunctionCall, right: null )
( self: return RETURN 14.6_re, father: Return, left: null, right: Expression )
( self: Expression SingleOrDoubleOperand null, father: Return, left: return, right: null )
( self: Expression Variable null, father: Expression, left: null, right: null )
( self: z _Variable 14.6_ex, father: Expression, left: null, right: null )
( self: Include null null, father: Sentence, left: FunctionStatement, right: FunctionStatement )
( self: # SHARP 16_in, father: Include, left: null, right: include )
( self: include INCLUDE 16_in, father: Include, left: #, right: < )
( self: < LT 16_in, father: Include, left: include, right: stdio.h )
( self: stdio.h IDENTIFIER 16_in, father: Include, left: <, right: > )
( self: > GT 16_in, father: Include, left: stdio.h, right: null )
( self: FunctionStatement null null, father: Sentence, left: Include, right: Include )
( self: Type null null, father: FunctionStatement, left: null, right: FunctionName )
( self: int FIELD_TYPE 17_fs, father: Type, left: null, right: null )
( self: FunctionName null null, father: FunctionStatement, left: Type, right: FunctionParameterList )
( self: sub IDENTIFIER 17_fs, father: FunctionName, left: null, right: null )
( self: FunctionParameterList null null, father: FunctionStatement, left: FunctionName, right: SEMICOLON )
( self: Parameter null null, father: FunctionParameterList, left: null, right: Parameter )
( self: int FIELD_TYPE 17_fs, father: Parameter, left: null, right: x )
( self: x IDENTIFIER 17_fs, father: Parameter, left: int, right: null )
( self: Parameter null null, father: FunctionParameterList, left: Parameter, right: Parameter )
( self: int FIELD_TYPE 17_fs, father: Parameter, left: null, right: y )
( self: y IDENTIFIER 17_fs, father: Parameter, left: int, right: null )
( self: Parameter null null, father: FunctionParameterList, left: Parameter, right: null )
( self: int FIELD_TYPE 17_fs, father: Parameter, left: null, right: d )
( self: d IDENTIFIER 17_fs, father: Parameter, left: int, right: null )
( self: SEMICOLON null null, father: FunctionStatement, left: FunctionParameterList, right: null )
( self: Include null null, father: Sentence, left: FunctionStatement, right: Include )
( self: # SHARP 18_in, father: Include, left: null, right: include )
( self: include INCLUDE 18_in, father: Include, left: #, right: < )
( self: < LT 18_in, father: Include, left: include, right: stdio.h )
( self: stdio.h IDENTIFIER 18_in, father: Include, left: <, right: > )
( self: > GT 18_in, father: Include, left: stdio.h, right: null )
( self: Include null null, father: Sentence, left: Include, right: FunctionStatement )
( self: # SHARP 19_in, father: Include, left: null, right: include )
( self: include INCLUDE 19_in, father: Include, left: #, right: " )
( self: " DOUBLE_QUOTE 19_in, father: Include, left: include, right: func2.h )
( self: func2.h IDENTIFIER 19_in, father: Include, left: ", right: " )
( self: " DOUBLE_QUOTE 19_in, father: Include, left: func2.h, right: null )
( self: FunctionStatement null null, father: Sentence, left: Include, right: null )
( self: Type null null, father: FunctionStatement, left: null, right: FunctionName )
( self: int FIELD_TYPE 20_fs, father: Type, left: null, right: null )
( self: FunctionName null null, father: FunctionStatement, left: Type, right: FunctionParameterList )
( self: sub IDENTIFIER 20_fs, father: FunctionName, left: null, right: null )
( self: FunctionParameterList null null, father: FunctionStatement, left: FunctionName, right: Sentence )
( self: Parameter null null, father: FunctionParameterList, left: null, right: Parameter )
( self: int FIELD_TYPE 20_fs, father: Parameter, left: null, right: x )
( self: x IDENTIFIER 20_fs, father: Parameter, left: int, right: null )
( self: Parameter null null, father: FunctionParameterList, left: Parameter, right: Parameter )
( self: int FIELD_TYPE 20_fs, father: Parameter, left: null, right: y )
( self: y IDENTIFIER 20_fs, father: Parameter, left: int, right: null )
( self: Parameter null null, father: FunctionParameterList, left: Parameter, right: null )
( self: int FIELD_TYPE 20_fs, father: Parameter, left: null, right: d )
( self: d IDENTIFIER 20_fs, father: Parameter, left: int, right: null )
( self: Sentence null null, father: FunctionStatement, left: FunctionParameterList, right: null )
( self: Statement null null, father: Sentence, left: null, right: Assignment )
( self: Type null null, father: Statement, left: null, right: z )
( self: int FIELD_TYPE 20.1_st, father: Type, left: null, right: null )
( self: z IDENTIFIER 20.1_st, father: Statement, left: Type, right: null )
( self: Assignment null null, father: Sentence, left: Statement, right: FunctionCall )
( self: z IDENTIFIER 20.2_as, father: Assignment, left: null, right: Expression )
( self: Expression SingleOrDoubleOperand null, father: Assignment, left: z, right: null )
( self: Expression Variable null, father: Expression, left: null, right: Expression )
( self: x _Variable 20.2_ex, father: Expression, left: null, right: null )
( self: Expression Variable null, father: Expression, left: Expression, right: Expression )
( self: y _Variable 20.2_ex, father: Expression, left: null, right: null )
( self: Expression Variable null, father: Expression, left: Expression, right: Operator )
( self: d _Variable 20.2_ex, father: Expression, left: null, right: null )
( self: Operator Operator null, father: Expression, left: Expression, right: Operator )
( self: - _Operator 20.2_ex, father: Operator, left: null, right: null )
( self: Operator Operator null, father: Expression, left: Operator, right: null )
( self: - _Operator 20.2_ex, father: Operator, left: null, right: null )
( self: FunctionCall null null, father: Sentence, left: Assignment, right: Return )
( self: printf FUNCTION_NAME 20.3_fc, father: FunctionCall, left: null, right: CallParameterList )
( self: CallParameterList null null, father: FunctionCall, left: printf, right: null )
( self: sub function %d\n STRING_CONSTANT 20.3_fc, father: CallParameterList, left: null, right: z )
( self: z IDENTIFIER 20.3_fc, father: CallParameterList, left: sub function %d\n, right: null )
( self: Return null null, father: Sentence, left: FunctionCall, right: null )
( self: return RETURN 20.4_re, father: Return, left: null, right: Expression )
( self: Expression SingleOrDoubleOperand null, father: Return, left: return, right: null )
( self: Expression Variable null, father: Expression, left: null, right: null )
( self: z _Variable 20.4_ex, father: Expression, left: null, right: null )

目标码生成开始...
目标码生成结束!
===================Assembler==================

	.section .rodata
	.align 2                                         # 6.9_fc
.LC0:	                                            # 6.9_fc
	.string	"The add result is : %d\n"               # 6.9_fc
	.align 2                                         # 6.10_fc
.LC1:	                                            # 6.10_fc
	.string	"The sub result is : %d\n"               # 6.10_fc

	.section ".text"
	.align 2                                         # 6_fs
	.globl main                                      # 6_fs
	.type main, @function                            # 6_fs
main:	                                            # 6_fs
	stwu 1,-32(1)                                    # 6_fs
	mflr 0                                           # 6_fs
	stw 31,28(1)                                     # 6_fs
	stw 0,36(1)                                      # 6_fs
	mr 31,1                                          # 6_fs

	li 0,1                                           # 6.4_as
	stw 0,8(31)                                      # 6.4_as

	li 0,2                                           # 6.5_as
	stw 0,12(31)                                     # 6.5_as

	lwz 3,8(31)                                      # 6.6_fc
	li 4,3                                           # 6.6_fc
	bl add                                           # 6.6_fc

	stw 3,16(31)                                     # 6.6_as

	lwz 3,8(31)                                      # 6.7_fc
	lwz 4,16(31)                                     # 6.7_fc
	lwz 5,12(31)                                     # 6.7_fc
	bl sub                                           # 6.7_fc

	stw 3,20(31)                                     # 6.7_as

	li 3,4                                           # 6.8_fc
	bl inc                                           # 6.8_fc

	stw 3,24(31)                                     # 6.8_as

	lis 0,.LC0@ha                                    # 6.9_fc
	addic 0,0,.LC0@l                                 # 6.9_fc
	mr 3,0                                           # 6.9_fc
	lwz 4,16(31)                                     # 6.9_fc
	crxor 6,6,6                                      # 6.9_fc
	bl printf                                        # 6.9_fc

	lis 0,.LC1@ha                                    # 6.10_fc
	addic 0,0,.LC1@l                                 # 6.10_fc
	mr 3,0                                           # 6.10_fc
	lwz 4,20(31)                                     # 6.10_fc
	crxor 6,6,6                                      # 6.10_fc
	bl printf                                        # 6.10_fc

	li 0,0                                           # 6.11_re
	mr 3,0                                           # 6.11_re
	lwz 11,0(1)                                      # 6_fs
	lwz 0,4(11)                                      # 6_fs
	mtlr 0                                           # 6_fs
	lwz 31,-4(11)                                    # 6_fs
	mr 1,11                                          # 6_fs
	blr                                              # 6_fs
	.size main,.-main                                # 6_fs

	.section .rodata

	.section ".text"
	.align 2                                         # 8_fs
	.globl inc                                       # 8_fs
	.type inc, @function                             # 8_fs
inc:	                                             # 8_fs
	stwu 1,-32(1)                                    # 8_fs
	stw 31,28(1)                                     # 8_fs
	mr 31,1                                          # 8_fs

	lwz 9,28(31)                                     # 8.2_ex
	li 0,1                                           # 8.2_ex
	add 0,9,0                                        # 8.2_ex
	stw 0,36(31)                                     # 8.2_ex

	lwz 0,36(31)                                     # 8.2_as
	stw 0,32(31)                                     # 8.2_as

	lwz 0,32(31)                                     # 8.3_re
	mr 3,0                                           # 8.3_re
	lwz 11,0(1)                                      # 8_fs
	lwz 31,-4(11)                                    # 8_fs
	mr 1,11                                          # 8_fs
	blr                                              # 8_fs
	.size inc,.-inc                                  # 8_fs

	.section .rodata
	.align 2                                         # 14.3_fc
.LC2:	                                            # 14.3_fc
	.string	"add function %d\n"                      # 14.3_fc
	.align 2                                         # 14.4_fc
.LC3:	                                            # 14.4_fc
	.string	"add x %d, y %d\n"                       # 14.4_fc
	.align 2                                         # 14.5_fc
.LC4:	                                            # 14.5_fc
	.string	"addd addd\n"                            # 14.5_fc

	.section ".text"
	.align 2                                         # 14_fs
	.globl add                                       # 14_fs
	.type add, @function                             # 14_fs
add:	                                             # 14_fs
	stwu 1,-32(1)                                    # 14_fs
	stw 31,28(1)                                     # 14_fs
	mr 31,1                                          # 14_fs

	lwz 9,36(31)                                     # 14.2_ex
	lwz 0,40(31)                                     # 14.2_ex
	add 0,9,0                                        # 14.2_ex
	stw 0,48(31)                                     # 14.2_ex

	lwz 0,48(31)                                     # 14.2_as
	stw 0,44(31)                                     # 14.2_as

	lis 0,.LC2@ha                                    # 14.3_fc
	addic 0,0,.LC2@l                                 # 14.3_fc
	mr 3,0                                           # 14.3_fc
	lwz 4,44(31)                                     # 14.3_fc
	crxor 6,6,6                                      # 14.3_fc
	bl printf                                        # 14.3_fc

	lis 0,.LC3@ha                                    # 14.4_fc
	addic 0,0,.LC3@l                                 # 14.4_fc
	mr 3,0                                           # 14.4_fc
	lwz 4,36(31)                                     # 14.4_fc
	lwz 5,40(31)                                     # 14.4_fc
	crxor 6,6,6                                      # 14.4_fc
	bl printf                                        # 14.4_fc

	lis 0,.LC4@ha                                    # 14.5_fc
	addic 0,0,.LC4@l                                 # 14.5_fc
	mr 3,0                                           # 14.5_fc
	crxor 6,6,6                                      # 14.5_fc
	bl printf                                        # 14.5_fc

	lwz 0,44(31)                                     # 14.6_re
	mr 3,0                                           # 14.6_re
	lwz 11,0(1)                                      # 14_fs
	lwz 31,-4(11)                                    # 14_fs
	mr 1,11                                          # 14_fs
	blr                                              # 14_fs
	.size add,.-add                                  # 14_fs

	.section .rodata
	.align 2                                         # 20.3_fc
.LC5:	                                            # 20.3_fc
	.string	"sub function %d\n"                      # 20.3_fc

	.section ".text"
	.align 2                                         # 20_fs
	.globl sub                                       # 20_fs
	.type sub, @function                             # 20_fs
sub:	                                             # 20_fs
	stwu 1,-32(1)                                    # 20_fs
	stw 31,28(1)                                     # 20_fs
	mr 31,1                                          # 20_fs

	lwz 9,52(31)                                     # 20.2_ex
	lwz 0,56(31)                                     # 20.2_ex
	subf 0,9,0                                       # 20.2_ex
	stw 0,64(31)                                     # 20.2_ex

	lwz 9,48(31)                                     # 20.2_ex
	lwz 0,64(31)                                     # 20.2_ex
	subf 0,9,0                                       # 20.2_ex
	stw 0,68(31)                                     # 20.2_ex

	lwz 0,68(31)                                     # 20.2_as
	stw 0,60(31)                                     # 20.2_as

	lis 0,.LC5@ha                                    # 20.3_fc
	addic 0,0,.LC5@l                                 # 20.3_fc
	mr 3,0                                           # 20.3_fc
	lwz 4,60(31)                                     # 20.3_fc
	crxor 6,6,6                                      # 20.3_fc
	bl printf                                        # 20.3_fc

	lwz 0,60(31)                                     # 20.4_re
	mr 3,0                                           # 20.4_re
	lwz 11,0(1)                                      # 20_fs
	lwz 31,-4(11)                                    # 20_fs
	mr 1,11                                          # 20_fs
	blr                                              # 20_fs
	.size sub,.-sub                                  # 20_fs
