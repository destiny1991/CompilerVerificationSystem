预处理源代码开始...(test7.c)
预处理源代码结束
词法分析开始...
预处理源代码开始...(func.c)
预处理源代码结束
词法分析结束!
====================Source C Code==================
#include <stdio.h>
#include "func.h"

int inc(int x) {
    int z;
    z = x + 1;
    return z;
}

int main() {
    int a, b, c;
    int d;
    int e;

    a = 1;
    b = 2;
    c = add(a, 3);
    d = sub(a, c, b);
    e = inc(4);

    printf("The add result is : %d\n", c);
    printf("The sub result is : %d\n", d);
    return 0;
}

====================Labeled C Code==================
#include <stdio.h>                                // 1
#include "func.h"                                 // 8

int inc(int x) {                                  // 9
    int z;                                        // 9.1
    z = x + 1;                                    // 9.2
    return z;                                     // 9.3
}                                                 // 10

int main() {                                      // 11
    int a, b, c;                                  // 11.1
    int d;                                        // 11.2
    int e;                                        // 11.3

    a = 1;                                        // 11.4
    b = 2;                                        // 11.5
    c = add(a, 3);                                // 11.6
    d = sub(a, c, b);                             // 11.7
    e = inc(4);                                   // 11.8

    printf("The add result is : %d\n", c);        // 11.9
    printf("The sub result is : %d\n", d);        // 11.10
    return 0;                                     // 11.11
}                                                 // 12

====================Lexer==================
(#, SHARP, 1)
(include, INCLUDE, 1)
(<, LT, 1)
(stdio.h, IDENTIFIER, 1)
(>, GT, 1)
(#, SHARP, 2)
(include, INCLUDE, 2)
(", DOUBLE_QUOTE, 2)
(func.h, IDENTIFIER, 2)
(", DOUBLE_QUOTE, 2)
(#, SHARP, 2)
(include, INCLUDE, 2)
(<, LT, 2)
(stdio.h, IDENTIFIER, 2)
(>, GT, 2)
(#, SHARP, 3)
(include, INCLUDE, 3)
(", DOUBLE_QUOTE, 3)
(func.h, IDENTIFIER, 3)
(", DOUBLE_QUOTE, 3)
(int, INT, 4)
(add, IDENTIFIER, 4)
((, LL_BRACKET, 4)
(int, INT, 4)
(x, IDENTIFIER, 4)
(,, COMMA, 4)
(int, INT, 4)
(y, IDENTIFIER, 4)
(), RL_BRACKET, 4)
({, LB_BRACKET, 4)
(int, INT, 4.1)
(z, IDENTIFIER, 4.1)
(;, SEMICOLON, 4.1)
(z, IDENTIFIER, 4.2)
(=, ASSIGN, 4.2)
(x, IDENTIFIER, 4.2)
(+, PLUS, 4.2)
(y, IDENTIFIER, 4.2)
(;, SEMICOLON, 4.2)
(printf, IDENTIFIER, 4.3)
((, LL_BRACKET, 4.3)
(", DOUBLE_QUOTE, 4.3)
(add function %d\n, STRING_CONSTANT, 4.3)
(", DOUBLE_QUOTE, 4.3)
(,, COMMA, 4.3)
(z, IDENTIFIER, 4.3)
(), RL_BRACKET, 4.3)
(;, SEMICOLON, 4.3)
(printf, IDENTIFIER, 4.4)
((, LL_BRACKET, 4.4)
(", DOUBLE_QUOTE, 4.4)
(add x %d, y %d\n, STRING_CONSTANT, 4.4)
(", DOUBLE_QUOTE, 4.4)
(,, COMMA, 4.4)
(x, IDENTIFIER, 4.4)
(,, COMMA, 4.4)
(y, IDENTIFIER, 4.4)
(), RL_BRACKET, 4.4)
(;, SEMICOLON, 4.4)
(printf, IDENTIFIER, 4.5)
((, LL_BRACKET, 4.5)
(", DOUBLE_QUOTE, 4.5)
(addd addd\n, STRING_CONSTANT, 4.5)
(", DOUBLE_QUOTE, 4.5)
(), RL_BRACKET, 4.5)
(;, SEMICOLON, 4.5)
(return, RETURN, 4.6)
(z, IDENTIFIER, 4.6)
(;, SEMICOLON, 4.6)
(}, RB_BRACKET, 5)
(int, INT, 6)
(sub, IDENTIFIER, 6)
((, LL_BRACKET, 6)
(int, INT, 6)
(x, IDENTIFIER, 6)
(,, COMMA, 6)
(int, INT, 6)
(y, IDENTIFIER, 6)
(,, COMMA, 6)
(int, INT, 6)
(d, IDENTIFIER, 6)
(), RL_BRACKET, 6)
({, LB_BRACKET, 6)
(int, INT, 6.1)
(z, IDENTIFIER, 6.1)
(;, SEMICOLON, 6.1)
(z, IDENTIFIER, 6.2)
(=, ASSIGN, 6.2)
(x, IDENTIFIER, 6.2)
(-, MINUS, 6.2)
(y, IDENTIFIER, 6.2)
(-, MINUS, 6.2)
(d, IDENTIFIER, 6.2)
(;, SEMICOLON, 6.2)
(printf, IDENTIFIER, 6.3)
((, LL_BRACKET, 6.3)
(", DOUBLE_QUOTE, 6.3)
(sub function %d\n, STRING_CONSTANT, 6.3)
(", DOUBLE_QUOTE, 6.3)
(,, COMMA, 6.3)
(z, IDENTIFIER, 6.3)
(), RL_BRACKET, 6.3)
(;, SEMICOLON, 6.3)
(return, RETURN, 6.4)
(z, IDENTIFIER, 6.4)
(;, SEMICOLON, 6.4)
(}, RB_BRACKET, 7)
(int, INT, 9)
(inc, IDENTIFIER, 9)
((, LL_BRACKET, 9)
(int, INT, 9)
(x, IDENTIFIER, 9)
(), RL_BRACKET, 9)
({, LB_BRACKET, 9)
(int, INT, 9.1)
(z, IDENTIFIER, 9.1)
(;, SEMICOLON, 9.1)
(z, IDENTIFIER, 9.2)
(=, ASSIGN, 9.2)
(x, IDENTIFIER, 9.2)
(+, PLUS, 9.2)
(1, DIGIT_CONSTANT, 9.2)
(;, SEMICOLON, 9.2)
(return, RETURN, 9.3)
(z, IDENTIFIER, 9.3)
(;, SEMICOLON, 9.3)
(}, RB_BRACKET, 10)
(int, INT, 11)
(main, IDENTIFIER, 11)
((, LL_BRACKET, 11)
(), RL_BRACKET, 11)
({, LB_BRACKET, 11)
(int, INT, 11.1)
(a, IDENTIFIER, 11.1)
(,, COMMA, 11.1)
(b, IDENTIFIER, 11.1)
(,, COMMA, 11.1)
(c, IDENTIFIER, 11.1)
(;, SEMICOLON, 11.1)
(int, INT, 11.2)
(d, IDENTIFIER, 11.2)
(;, SEMICOLON, 11.2)
(int, INT, 11.3)
(e, IDENTIFIER, 11.3)
(;, SEMICOLON, 11.3)
(a, IDENTIFIER, 11.4)
(=, ASSIGN, 11.4)
(1, DIGIT_CONSTANT, 11.4)
(;, SEMICOLON, 11.4)
(b, IDENTIFIER, 11.5)
(=, ASSIGN, 11.5)
(2, DIGIT_CONSTANT, 11.5)
(;, SEMICOLON, 11.5)
(c, IDENTIFIER, 11.6)
(=, ASSIGN, 11.6)
(add, IDENTIFIER, 11.6)
((, LL_BRACKET, 11.6)
(a, IDENTIFIER, 11.6)
(,, COMMA, 11.6)
(3, DIGIT_CONSTANT, 11.6)
(), RL_BRACKET, 11.6)
(;, SEMICOLON, 11.6)
(d, IDENTIFIER, 11.7)
(=, ASSIGN, 11.7)
(sub, IDENTIFIER, 11.7)
((, LL_BRACKET, 11.7)
(a, IDENTIFIER, 11.7)
(,, COMMA, 11.7)
(c, IDENTIFIER, 11.7)
(,, COMMA, 11.7)
(b, IDENTIFIER, 11.7)
(), RL_BRACKET, 11.7)
(;, SEMICOLON, 11.7)
(e, IDENTIFIER, 11.8)
(=, ASSIGN, 11.8)
(inc, IDENTIFIER, 11.8)
((, LL_BRACKET, 11.8)
(4, DIGIT_CONSTANT, 11.8)
(), RL_BRACKET, 11.8)
(;, SEMICOLON, 11.8)
(printf, IDENTIFIER, 11.9)
((, LL_BRACKET, 11.9)
(", DOUBLE_QUOTE, 11.9)
(The add result is : %d\n, STRING_CONSTANT, 11.9)
(", DOUBLE_QUOTE, 11.9)
(,, COMMA, 11.9)
(c, IDENTIFIER, 11.9)
(), RL_BRACKET, 11.9)
(;, SEMICOLON, 11.9)
(printf, IDENTIFIER, 11.10)
((, LL_BRACKET, 11.10)
(", DOUBLE_QUOTE, 11.10)
(The sub result is : %d\n, STRING_CONSTANT, 11.10)
(", DOUBLE_QUOTE, 11.10)
(,, COMMA, 11.10)
(d, IDENTIFIER, 11.10)
(), RL_BRACKET, 11.10)
(;, SEMICOLON, 11.10)
(return, RETURN, 11.11)
(0, DIGIT_CONSTANT, 11.11)
(;, SEMICOLON, 11.11)
(}, RB_BRACKET, 12)

语法分析开始...
  include语句 : 语法合法
  include语句 : 语法合法
  include语句 : 语法合法
  include语句 : 语法合法
  变量声明语句 : 语法合法
  表达式语句 : 语法合法
  赋值语句 : 语法合法
  函数调用语句 : 语法合法
  函数调用语句 : 语法合法
  函数调用语句 : 语法合法
  表达式语句 : 语法合法
  return语句 : 语法合法
  变量声明语句 : 语法合法
  表达式语句 : 语法合法
  赋值语句 : 语法合法
  函数调用语句 : 语法合法
  表达式语句 : 语法合法
  return语句 : 语法合法
  变量声明语句 : 语法合法
  表达式语句 : 语法合法
  赋值语句 : 语法合法
  表达式语句 : 语法合法
  return语句 : 语法合法
  变量声明语句 : 语法合法
  变量声明语句 : 语法合法
  变量声明语句 : 语法合法
  表达式语句 : 语法合法
  赋值语句 : 语法合法
  表达式语句 : 语法合法
  赋值语句 : 语法合法
  函数调用语句 : 语法合法
  赋值语句 : 语法合法
  函数调用语句 : 语法合法
  赋值语句 : 语法合法
  函数调用语句 : 语法合法
  赋值语句 : 语法合法
  函数调用语句 : 语法合法
  函数调用语句 : 语法合法
  表达式语句 : 语法合法
  return语句 : 语法合法
  函数定义 : 语法合法
语法分析结束!
====================Parser==================
( self: Sentence null null, father: null, left: null, right: null )
( self: Include null null, father: Sentence, left: null, right: Include )
( self: # SHARP 1_in, father: Include, left: null, right: include )
( self: include INCLUDE 1_in, father: Include, left: #, right: < )
( self: < LT 1_in, father: Include, left: include, right: stdio.h )
( self: stdio.h IDENTIFIER 1_in, father: Include, left: <, right: > )
( self: > GT 1_in, father: Include, left: stdio.h, right: null )
( self: Include null null, father: Sentence, left: Include, right: Include )
( self: # SHARP 2_in, father: Include, left: null, right: include )
( self: include INCLUDE 2_in, father: Include, left: #, right: " )
( self: " DOUBLE_QUOTE 2_in, father: Include, left: include, right: func.h )
( self: func.h IDENTIFIER 2_in, father: Include, left: ", right: " )
( self: " DOUBLE_QUOTE 2_in, father: Include, left: func.h, right: null )
( self: Include null null, father: Sentence, left: Include, right: Include )
( self: # SHARP 2_in, father: Include, left: null, right: include )
( self: include INCLUDE 2_in, father: Include, left: #, right: < )
( self: < LT 2_in, father: Include, left: include, right: stdio.h )
( self: stdio.h IDENTIFIER 2_in, father: Include, left: <, right: > )
( self: > GT 2_in, father: Include, left: stdio.h, right: null )
( self: Include null null, father: Sentence, left: Include, right: FunctionStatement )
( self: # SHARP 3_in, father: Include, left: null, right: include )
( self: include INCLUDE 3_in, father: Include, left: #, right: " )
( self: " DOUBLE_QUOTE 3_in, father: Include, left: include, right: func.h )
( self: func.h IDENTIFIER 3_in, father: Include, left: ", right: " )
( self: " DOUBLE_QUOTE 3_in, father: Include, left: func.h, right: null )
( self: FunctionStatement null null, father: Sentence, left: Include, right: null )
( self: Type null null, father: FunctionStatement, left: null, right: FunctionName )
( self: int FIELD_TYPE 4_fs, father: Type, left: null, right: null )
( self: FunctionName null null, father: FunctionStatement, left: Type, right: FunctionParameterList )
( self: add IDENTIFIER 4_fs, father: FunctionName, left: null, right: null )
( self: FunctionParameterList null null, father: FunctionStatement, left: FunctionName, right: Sentence )
( self: Parameter null null, father: FunctionParameterList, left: null, right: Parameter )
( self: int FIELD_TYPE 4_fs, father: Parameter, left: null, right: x )
( self: x IDENTIFIER 4_fs, father: Parameter, left: int, right: null )
( self: Parameter null null, father: FunctionParameterList, left: Parameter, right: null )
( self: int FIELD_TYPE 4_fs, father: Parameter, left: null, right: y )
( self: y IDENTIFIER 4_fs, father: Parameter, left: int, right: null )
( self: Sentence null null, father: FunctionStatement, left: FunctionParameterList, right: Type )
( self: Statement null null, father: Sentence, left: null, right: Assignment )
( self: Type null null, father: Statement, left: null, right: z )
( self: int FIELD_TYPE 4.1_st, father: Type, left: null, right: null )
( self: z IDENTIFIER 4.1_st, father: Statement, left: Type, right: null )
( self: Assignment null null, father: Sentence, left: Statement, right: FunctionCall )
( self: z IDENTIFIER 4.2_as, father: Assignment, left: null, right: Expression )
( self: Expression SingleOrDoubleOperand null, father: Assignment, left: z, right: null )
( self: Expression Variable null, father: Expression, left: null, right: Expression )
( self: x _Variable 4.2_ex, father: Expression, left: null, right: null )
( self: Expression Variable null, father: Expression, left: Expression, right: Operator )
( self: y _Variable 4.2_ex, father: Expression, left: null, right: null )
( self: Operator Operator null, father: Expression, left: Expression, right: null )
( self: + _Operator 4.2_ex, father: Operator, left: null, right: null )
( self: FunctionCall null null, father: Sentence, left: Assignment, right: FunctionCall )
( self: printf FUNCTION_NAME 4.3_fc, father: FunctionCall, left: null, right: CallParameterList )
( self: CallParameterList null null, father: FunctionCall, left: printf, right: null )
( self: add function %d\n STRING_CONSTANT 4.3_fc, father: CallParameterList, left: null, right: z )
( self: z IDENTIFIER 4.3_fc, father: CallParameterList, left: add function %d\n, right: null )
( self: FunctionCall null null, father: Sentence, left: FunctionCall, right: FunctionCall )
( self: printf FUNCTION_NAME 4.4_fc, father: FunctionCall, left: null, right: CallParameterList )
( self: CallParameterList null null, father: FunctionCall, left: printf, right: null )
( self: add x %d, y %d\n STRING_CONSTANT 4.4_fc, father: CallParameterList, left: null, right: x )
( self: x IDENTIFIER 4.4_fc, father: CallParameterList, left: add x %d, y %d\n, right: y )
( self: y IDENTIFIER 4.4_fc, father: CallParameterList, left: x, right: null )
( self: FunctionCall null null, father: Sentence, left: FunctionCall, right: Return )
( self: printf FUNCTION_NAME 4.5_fc, father: FunctionCall, left: null, right: CallParameterList )
( self: CallParameterList null null, father: FunctionCall, left: printf, right: null )
( self: addd addd\n STRING_CONSTANT 4.5_fc, father: CallParameterList, left: null, right: null )
( self: Return null null, father: Sentence, left: FunctionCall, right: null )
( self: return RETURN 4.6_re, father: Return, left: null, right: Expression )
( self: Expression SingleOrDoubleOperand null, father: Return, left: return, right: null )
( self: Expression Variable null, father: Expression, left: null, right: null )
( self: z _Variable 4.6_ex, father: Expression, left: null, right: null )
( self: Type null null, father: FunctionStatement, left: Sentence, right: FunctionName )
( self: int FIELD_TYPE 6_fs, father: Type, left: null, right: null )
( self: FunctionName null null, father: FunctionStatement, left: Type, right: FunctionParameterList )
( self: sub IDENTIFIER 6_fs, father: FunctionName, left: null, right: null )
( self: FunctionParameterList null null, father: FunctionStatement, left: FunctionName, right: Sentence )
( self: Parameter null null, father: FunctionParameterList, left: null, right: Parameter )
( self: int FIELD_TYPE 6_fs, father: Parameter, left: null, right: x )
( self: x IDENTIFIER 6_fs, father: Parameter, left: int, right: null )
( self: Parameter null null, father: FunctionParameterList, left: Parameter, right: Parameter )
( self: int FIELD_TYPE 6_fs, father: Parameter, left: null, right: y )
( self: y IDENTIFIER 6_fs, father: Parameter, left: int, right: null )
( self: Parameter null null, father: FunctionParameterList, left: Parameter, right: null )
( self: int FIELD_TYPE 6_fs, father: Parameter, left: null, right: d )
( self: d IDENTIFIER 6_fs, father: Parameter, left: int, right: null )
( self: Sentence null null, father: FunctionStatement, left: FunctionParameterList, right: Type )
( self: Statement null null, father: Sentence, left: null, right: Assignment )
( self: Type null null, father: Statement, left: null, right: z )
( self: int FIELD_TYPE 6.1_st, father: Type, left: null, right: null )
( self: z IDENTIFIER 6.1_st, father: Statement, left: Type, right: null )
( self: Assignment null null, father: Sentence, left: Statement, right: FunctionCall )
( self: z IDENTIFIER 6.2_as, father: Assignment, left: null, right: Expression )
( self: Expression SingleOrDoubleOperand null, father: Assignment, left: z, right: null )
( self: Expression Variable null, father: Expression, left: null, right: Expression )
( self: x _Variable 6.2_ex, father: Expression, left: null, right: null )
( self: Expression Variable null, father: Expression, left: Expression, right: Expression )
( self: y _Variable 6.2_ex, father: Expression, left: null, right: null )
( self: Expression Variable null, father: Expression, left: Expression, right: Operator )
( self: d _Variable 6.2_ex, father: Expression, left: null, right: null )
( self: Operator Operator null, father: Expression, left: Expression, right: Operator )
( self: - _Operator 6.2_ex, father: Operator, left: null, right: null )
( self: Operator Operator null, father: Expression, left: Operator, right: null )
( self: - _Operator 6.2_ex, father: Operator, left: null, right: null )
( self: FunctionCall null null, father: Sentence, left: Assignment, right: Return )
( self: printf FUNCTION_NAME 6.3_fc, father: FunctionCall, left: null, right: CallParameterList )
( self: CallParameterList null null, father: FunctionCall, left: printf, right: null )
( self: sub function %d\n STRING_CONSTANT 6.3_fc, father: CallParameterList, left: null, right: z )
( self: z IDENTIFIER 6.3_fc, father: CallParameterList, left: sub function %d\n, right: null )
( self: Return null null, father: Sentence, left: FunctionCall, right: null )
( self: return RETURN 6.4_re, father: Return, left: null, right: Expression )
( self: Expression SingleOrDoubleOperand null, father: Return, left: return, right: null )
( self: Expression Variable null, father: Expression, left: null, right: null )
( self: z _Variable 6.4_ex, father: Expression, left: null, right: null )
( self: Type null null, father: FunctionStatement, left: Sentence, right: FunctionName )
( self: int FIELD_TYPE 9_fs, father: Type, left: null, right: null )
( self: FunctionName null null, father: FunctionStatement, left: Type, right: FunctionParameterList )
( self: inc IDENTIFIER 9_fs, father: FunctionName, left: null, right: null )
( self: FunctionParameterList null null, father: FunctionStatement, left: FunctionName, right: Sentence )
( self: Parameter null null, father: FunctionParameterList, left: null, right: null )
( self: int FIELD_TYPE 9_fs, father: Parameter, left: null, right: x )
( self: x IDENTIFIER 9_fs, father: Parameter, left: int, right: null )
( self: Sentence null null, father: FunctionStatement, left: FunctionParameterList, right: Type )
( self: Statement null null, father: Sentence, left: null, right: Assignment )
( self: Type null null, father: Statement, left: null, right: z )
( self: int FIELD_TYPE 9.1_st, father: Type, left: null, right: null )
( self: z IDENTIFIER 9.1_st, father: Statement, left: Type, right: null )
( self: Assignment null null, father: Sentence, left: Statement, right: Return )
( self: z IDENTIFIER 9.2_as, father: Assignment, left: null, right: Expression )
( self: Expression SingleOrDoubleOperand null, father: Assignment, left: z, right: null )
( self: Expression Variable null, father: Expression, left: null, right: Expression )
( self: x _Variable 9.2_ex, father: Expression, left: null, right: null )
( self: Expression Constant null, father: Expression, left: Expression, right: Operator )
( self: 1 _Constant 9.2_ex, father: Expression, left: null, right: null )
( self: Operator Operator null, father: Expression, left: Expression, right: null )
( self: + _Operator 9.2_ex, father: Operator, left: null, right: null )
( self: Return null null, father: Sentence, left: Assignment, right: null )
( self: return RETURN 9.3_re, father: Return, left: null, right: Expression )
( self: Expression SingleOrDoubleOperand null, father: Return, left: return, right: null )
( self: Expression Variable null, father: Expression, left: null, right: null )
( self: z _Variable 9.3_ex, father: Expression, left: null, right: null )
( self: Type null null, father: FunctionStatement, left: Sentence, right: FunctionName )
( self: int FIELD_TYPE 11_fs, father: Type, left: null, right: null )
( self: FunctionName null null, father: FunctionStatement, left: Type, right: FunctionParameterList )
( self: main IDENTIFIER 11_fs, father: FunctionName, left: null, right: null )
( self: FunctionParameterList null null, father: FunctionStatement, left: FunctionName, right: Sentence )
( self: Sentence null null, father: FunctionStatement, left: FunctionParameterList, right: null )
( self: Statement null null, father: Sentence, left: null, right: Statement )
( self: Type null null, father: Statement, left: null, right: a )
( self: int FIELD_TYPE 11.1_st, father: Type, left: null, right: null )
( self: a IDENTIFIER 11.1_st, father: Statement, left: Type, right: null )
( self: Statement null null, father: Sentence, left: Statement, right: Statement )
( self: Type null null, father: Statement, left: null, right: b )
( self: int FIELD_TYPE null, father: Type, left: null, right: null )
( self: b IDENTIFIER 11.1_st, father: Statement, left: Type, right: null )
( self: Statement null null, father: Sentence, left: Statement, right: Statement )
( self: Type null null, father: Statement, left: null, right: c )
( self: int FIELD_TYPE null, father: Type, left: null, right: null )
( self: c IDENTIFIER 11.1_st, father: Statement, left: Type, right: null )
( self: Statement null null, father: Sentence, left: Statement, right: Statement )
( self: Type null null, father: Statement, left: null, right: d )
( self: int FIELD_TYPE 11.2_st, father: Type, left: null, right: null )
( self: d IDENTIFIER 11.2_st, father: Statement, left: Type, right: null )
( self: Statement null null, father: Sentence, left: Statement, right: Assignment )
( self: Type null null, father: Statement, left: null, right: e )
( self: int FIELD_TYPE 11.3_st, father: Type, left: null, right: null )
( self: e IDENTIFIER 11.3_st, father: Statement, left: Type, right: null )
( self: Assignment null null, father: Sentence, left: Statement, right: Assignment )
( self: a IDENTIFIER 11.4_as, father: Assignment, left: null, right: Expression )
( self: Expression SingleOrDoubleOperand null, father: Assignment, left: a, right: null )
( self: Expression Constant null, father: Expression, left: null, right: null )
( self: 1 _Constant 11.4_ex, father: Expression, left: null, right: null )
( self: Assignment null null, father: Sentence, left: Assignment, right: Assignment )
( self: b IDENTIFIER 11.5_as, father: Assignment, left: null, right: Expression )
( self: Expression SingleOrDoubleOperand null, father: Assignment, left: b, right: null )
( self: Expression Constant null, father: Expression, left: null, right: null )
( self: 2 _Constant 11.5_ex, father: Expression, left: null, right: null )
( self: Assignment null null, father: Sentence, left: Assignment, right: Assignment )
( self: c IDENTIFIER 11.6_as, father: Assignment, left: null, right: FunctionCall )
( self: FunctionCall null null, father: Assignment, left: c, right: null )
( self: add FUNCTION_NAME 11.6_fc, father: FunctionCall, left: null, right: CallParameterList )
( self: CallParameterList null null, father: FunctionCall, left: add, right: null )
( self: a IDENTIFIER 11.6_fc, father: CallParameterList, left: null, right: 3 )
( self: 3 DIGIT_CONSTANT 11.6_fc, father: CallParameterList, left: a, right: null )
( self: Assignment null null, father: Sentence, left: Assignment, right: Assignment )
( self: d IDENTIFIER 11.7_as, father: Assignment, left: null, right: FunctionCall )
( self: FunctionCall null null, father: Assignment, left: d, right: null )
( self: sub FUNCTION_NAME 11.7_fc, father: FunctionCall, left: null, right: CallParameterList )
( self: CallParameterList null null, father: FunctionCall, left: sub, right: null )
( self: a IDENTIFIER 11.7_fc, father: CallParameterList, left: null, right: c )
( self: c IDENTIFIER 11.7_fc, father: CallParameterList, left: a, right: b )
( self: b IDENTIFIER 11.7_fc, father: CallParameterList, left: c, right: null )
( self: Assignment null null, father: Sentence, left: Assignment, right: FunctionCall )
( self: e IDENTIFIER 11.8_as, father: Assignment, left: null, right: FunctionCall )
( self: FunctionCall null null, father: Assignment, left: e, right: null )
( self: inc FUNCTION_NAME 11.8_fc, father: FunctionCall, left: null, right: CallParameterList )
( self: CallParameterList null null, father: FunctionCall, left: inc, right: null )
( self: 4 DIGIT_CONSTANT 11.8_fc, father: CallParameterList, left: null, right: null )
( self: FunctionCall null null, father: Sentence, left: Assignment, right: FunctionCall )
( self: printf FUNCTION_NAME 11.9_fc, father: FunctionCall, left: null, right: CallParameterList )
( self: CallParameterList null null, father: FunctionCall, left: printf, right: null )
( self: The add result is : %d\n STRING_CONSTANT 11.9_fc, father: CallParameterList, left: null, right: c )
( self: c IDENTIFIER 11.9_fc, father: CallParameterList, left: The add result is : %d\n, right: null )
( self: FunctionCall null null, father: Sentence, left: FunctionCall, right: Return )
( self: printf FUNCTION_NAME 11.10_fc, father: FunctionCall, left: null, right: CallParameterList )
( self: CallParameterList null null, father: FunctionCall, left: printf, right: null )
( self: The sub result is : %d\n STRING_CONSTANT 11.10_fc, father: CallParameterList, left: null, right: d )
( self: d IDENTIFIER 11.10_fc, father: CallParameterList, left: The sub result is : %d\n, right: null )
( self: Return null null, father: Sentence, left: FunctionCall, right: null )
( self: return RETURN 11.11_re, father: Return, left: null, right: Expression )
( self: Expression SingleOrDoubleOperand null, father: Return, left: return, right: null )
( self: Expression Constant null, father: Expression, left: null, right: null )
( self: 0 _Constant 11.11_ex, father: Expression, left: null, right: null )

目标码生成开始...
目标码生成结束!
===================Assembler==================

	.section .rodata
	.align 2                                         # 4.3_fc
.LC0:	                                            # 4.3_fc
	.string	"add function %d\n"                      # 4.3_fc
	.align 2                                         # 4.4_fc
.LC1:	                                            # 4.4_fc
	.string	"add x %d, y %d\n"                       # 4.4_fc
	.align 2                                         # 4.5_fc
.LC2:	                                            # 4.5_fc
	.string	"addd addd\n"                            # 4.5_fc

	.section ".text"
	.align 2                                         # 4_fs
	.globl add                                       # 4_fs
	.type add, @function                             # 4_fs
add:	                                             # 4_fs
	stwu 1,-32(1)                                    # 4_fs
	stw 31,28(1)                                     # 4_fs
	mr 31,1                                          # 4_fs

	lwz 9,8(31)                                      # 4.2_ex
	lwz 0,12(31)                                     # 4.2_ex
	add 0,9,0                                        # 4.2_ex
	stw 0,20(31)                                     # 4.2_ex

	lwz 0,20(31)                                     # 4.2_as
	stw 0,16(31)                                     # 4.2_as

	lis 0,.LC0@ha                                    # 4.3_fc
	addic 0,0,.LC0@l                                 # 4.3_fc
	mr 3,0                                           # 4.3_fc
	lwz 4,16(31)                                     # 4.3_fc
	crxor 6,6,6                                      # 4.3_fc
	bl printf                                        # 4.3_fc

	lis 0,.LC1@ha                                    # 4.4_fc
	addic 0,0,.LC1@l                                 # 4.4_fc
	mr 3,0                                           # 4.4_fc
	lwz 4,8(31)                                      # 4.4_fc
	lwz 5,12(31)                                     # 4.4_fc
	crxor 6,6,6                                      # 4.4_fc
	bl printf                                        # 4.4_fc

	lis 0,.LC2@ha                                    # 4.5_fc
	addic 0,0,.LC2@l                                 # 4.5_fc
	mr 3,0                                           # 4.5_fc
	crxor 6,6,6                                      # 4.5_fc
	bl printf                                        # 4.5_fc

	lwz 0,16(31)                                     # 4.6_re
	mr 3,0                                           # 4.6_re
	lwz 11,0(1)                                      # 4_fs
	lwz 31,-4(11)                                    # 4_fs
	mr 1,11                                          # 4_fs
	blr                                              # 4_fs
	.size add,.-add                                  # 4_fs

	.section .rodata
	.align 2                                         # 6.3_fc
.LC3:	                                            # 6.3_fc
	.string	"sub function %d\n"                      # 6.3_fc

	.section ".text"
	.align 2                                         # 6_fs
	.globl sub                                       # 6_fs
	.type sub, @function                             # 6_fs
sub:	                                             # 6_fs
	stwu 1,-32(1)                                    # 6_fs
	stw 31,28(1)                                     # 6_fs
	mr 31,1                                          # 6_fs

	lwz 9,24(31)                                     # 6.2_ex
	lwz 0,28(31)                                     # 6.2_ex
	subf 0,9,0                                       # 6.2_ex
	stw 0,36(31)                                     # 6.2_ex

	lwz 9,20(31)                                     # 6.2_ex
	lwz 0,36(31)                                     # 6.2_ex
	subf 0,9,0                                       # 6.2_ex
	stw 0,40(31)                                     # 6.2_ex

	lwz 0,40(31)                                     # 6.2_as
	stw 0,32(31)                                     # 6.2_as

	lis 0,.LC3@ha                                    # 6.3_fc
	addic 0,0,.LC3@l                                 # 6.3_fc
	mr 3,0                                           # 6.3_fc
	lwz 4,32(31)                                     # 6.3_fc
	crxor 6,6,6                                      # 6.3_fc
	bl printf                                        # 6.3_fc

	lwz 0,32(31)                                     # 6.4_re
	mr 3,0                                           # 6.4_re
	lwz 11,0(1)                                      # 6_fs
	lwz 31,-4(11)                                    # 6_fs
	mr 1,11                                          # 6_fs
	blr                                              # 6_fs
	.size sub,.-sub                                  # 6_fs

	.section .rodata

	.section ".text"
	.align 2                                         # 9_fs
	.globl inc                                       # 9_fs
	.type inc, @function                             # 9_fs
inc:	                                             # 9_fs
	stwu 1,-32(1)                                    # 9_fs
	stw 31,28(1)                                     # 9_fs
	mr 31,1                                          # 9_fs

	lwz 9,36(31)                                     # 9.2_ex
	li 0,1                                           # 9.2_ex
	add 0,9,0                                        # 9.2_ex
	stw 0,44(31)                                     # 9.2_ex

	lwz 0,44(31)                                     # 9.2_as
	stw 0,40(31)                                     # 9.2_as

	lwz 0,40(31)                                     # 9.3_re
	mr 3,0                                           # 9.3_re
	lwz 11,0(1)                                      # 9_fs
	lwz 31,-4(11)                                    # 9_fs
	mr 1,11                                          # 9_fs
	blr                                              # 9_fs
	.size inc,.-inc                                  # 9_fs

	.section .rodata
	.align 2                                         # 11.9_fc
.LC4:	                                            # 11.9_fc
	.string	"The add result is : %d\n"               # 11.9_fc
	.align 2                                         # 11.10_fc
.LC5:	                                            # 11.10_fc
	.string	"The sub result is : %d\n"               # 11.10_fc

	.section ".text"
	.align 2                                         # 11_fs
	.globl main                                      # 11_fs
	.type main, @function                            # 11_fs
main:	                                            # 11_fs
	stwu 1,-32(1)                                    # 11_fs
	mflr 0                                           # 11_fs
	stw 31,28(1)                                     # 11_fs
	stw 0,36(1)                                      # 11_fs
	mr 31,1                                          # 11_fs

	li 0,1                                           # 11.4_as
	stw 0,44(31)                                     # 11.4_as

	li 0,2                                           # 11.5_as
	stw 0,48(31)                                     # 11.5_as

	lwz 3,44(31)                                     # 11.6_fc
	li 4,3                                           # 11.6_fc
	bl add                                           # 11.6_fc

	stw 3,52(31)                                     # 11.6_as

	lwz 3,44(31)                                     # 11.7_fc
	lwz 4,52(31)                                     # 11.7_fc
	lwz 5,48(31)                                     # 11.7_fc
	bl sub                                           # 11.7_fc

	stw 3,56(31)                                     # 11.7_as

	li 3,4                                           # 11.8_fc
	bl inc                                           # 11.8_fc

	stw 3,60(31)                                     # 11.8_as

	lis 0,.LC4@ha                                    # 11.9_fc
	addic 0,0,.LC4@l                                 # 11.9_fc
	mr 3,0                                           # 11.9_fc
	lwz 4,52(31)                                     # 11.9_fc
	crxor 6,6,6                                      # 11.9_fc
	bl printf                                        # 11.9_fc

	lis 0,.LC5@ha                                    # 11.10_fc
	addic 0,0,.LC5@l                                 # 11.10_fc
	mr 3,0                                           # 11.10_fc
	lwz 4,56(31)                                     # 11.10_fc
	crxor 6,6,6                                      # 11.10_fc
	bl printf                                        # 11.10_fc

	li 0,0                                           # 11.11_re
	mr 3,0                                           # 11.11_re
	lwz 11,0(1)                                      # 11_fs
	lwz 0,4(11)                                      # 11_fs
	mtlr 0                                           # 11_fs
	lwz 31,-4(11)                                    # 11_fs
	mr 1,11                                          # 11_fs
	blr                                              # 11_fs
	.size main,.-main                                # 11_fs
