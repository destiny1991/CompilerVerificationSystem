预处理源代码开始...
预处理源代码结束
====================Source C Code==================
#include <stdio.h>
#include <stdlib.h>

int main() {
    float a, b, c;
    float d;

    scanf("%f %f %f %f", &a, &b, &c, &d);
    printf("%f %f %f %f", a, b, c, d);

     a = 1.2f;
    b = 1.3F;
    c = a * b + a;

    a > 1;


    return 0;
}

int add() {

}

int sub() {

}

int mul() {
	
}

源代码标号开始...
源代码编号结束!
====================Labeled C Code==================
#include <stdio.h>                                // 1
#include <stdlib.h>                               // 2

int main() {                                      // 3
    float a, b, c;                                // 3.1
    float d;                                      // 3.2

    scanf("%f %f %f %f", &a, &b, &c, &d);         // 3.3
    printf("%f %f %f %f", a, b, c, d);            // 3.4

     a = 1.2f;                                    // 3.5
    b = 1.3F;                                     // 3.6
    c = a * b + a;                                // 3.7

    a > 1;                                        // 3.8


    return 0;                                     // 3.9
}                                                 // 4

int add() {                                       // 5

}                                                 // 6

int sub() {                                       // 7

}                                                 // 8

int mul() {                                       // 9
	
}                                                 // 10

词法分析开始...
词法分析结束!
====================Lexer==================
(#, SHARP, 1)
(include, INCLUDE, 1)
(<, LT, 1)
(stdio.h, IDENTIFIER, 1)
(>, GT, 1)
(#, SHARP, 2)
(include, INCLUDE, 2)
(<, LT, 2)
(stdlib.h, IDENTIFIER, 2)
(>, GT, 2)
(int, INT, 3)
(main, IDENTIFIER, 3)
((, LL_BRACKET, 3)
(), RL_BRACKET, 3)
({, LB_BRACKET, 3)
(float, FLOAT, 3.1)
(a, IDENTIFIER, 3.1)
(,, COMMA, 3.1)
(b, IDENTIFIER, 3.1)
(,, COMMA, 3.1)
(c, IDENTIFIER, 3.1)
(;, SEMICOLON, 3.1)
(float, FLOAT, 3.2)
(d, IDENTIFIER, 3.2)
(;, SEMICOLON, 3.2)
(scanf, IDENTIFIER, 3.3)
((, LL_BRACKET, 3.3)
(", DOUBLE_QUOTE, 3.3)
(%f %f %f %f, STRING_CONSTANT, 3.3)
(", DOUBLE_QUOTE, 3.3)
(,, COMMA, 3.3)
(&, BIT_AND, 3.3)
(a, IDENTIFIER, 3.3)
(,, COMMA, 3.3)
(&, BIT_AND, 3.3)
(b, IDENTIFIER, 3.3)
(,, COMMA, 3.3)
(&, BIT_AND, 3.3)
(c, IDENTIFIER, 3.3)
(,, COMMA, 3.3)
(&, BIT_AND, 3.3)
(d, IDENTIFIER, 3.3)
(), RL_BRACKET, 3.3)
(;, SEMICOLON, 3.3)
(printf, IDENTIFIER, 3.4)
((, LL_BRACKET, 3.4)
(", DOUBLE_QUOTE, 3.4)
(%f %f %f %f, STRING_CONSTANT, 3.4)
(", DOUBLE_QUOTE, 3.4)
(,, COMMA, 3.4)
(a, IDENTIFIER, 3.4)
(,, COMMA, 3.4)
(b, IDENTIFIER, 3.4)
(,, COMMA, 3.4)
(c, IDENTIFIER, 3.4)
(,, COMMA, 3.4)
(d, IDENTIFIER, 3.4)
(), RL_BRACKET, 3.4)
(;, SEMICOLON, 3.4)
(a, IDENTIFIER, 3.5)
(=, ASSIGN, 3.5)
(1.2f, DIGIT_CONSTANT, 3.5)
(;, SEMICOLON, 3.5)
(b, IDENTIFIER, 3.6)
(=, ASSIGN, 3.6)
(1.3F, DIGIT_CONSTANT, 3.6)
(;, SEMICOLON, 3.6)
(c, IDENTIFIER, 3.7)
(=, ASSIGN, 3.7)
(a, IDENTIFIER, 3.7)
(*, MUL, 3.7)
(b, IDENTIFIER, 3.7)
(+, PLUS, 3.7)
(a, IDENTIFIER, 3.7)
(;, SEMICOLON, 3.7)
(a, IDENTIFIER, 3.8)
(>, GT, 3.8)
(1, DIGIT_CONSTANT, 3.8)
(;, SEMICOLON, 3.8)
(return, RETURN, 3.9)
(0, DIGIT_CONSTANT, 3.9)
(;, SEMICOLON, 3.9)
(}, RB_BRACKET, 4)
(int, INT, 5)
(add, IDENTIFIER, 5)
((, LL_BRACKET, 5)
(), RL_BRACKET, 5)
({, LB_BRACKET, 5)
(}, RB_BRACKET, 6)
(int, INT, 7)
(sub, IDENTIFIER, 7)
((, LL_BRACKET, 7)
(), RL_BRACKET, 7)
({, LB_BRACKET, 7)
(}, RB_BRACKET, 8)
(int, INT, 9)
(mul, IDENTIFIER, 9)
((, LL_BRACKET, 9)
(), RL_BRACKET, 9)
({, LB_BRACKET, 9)
(}, RB_BRACKET, 10)

语法分析开始...
  include语句 : 语法合法
  include语句 : 语法合法
  变量声明语句 : 语法合法
  变量声明语句 : 语法合法
  函数调用语句 : 语法合法
  函数调用语句 : 语法合法
  表达式语句 : 语法合法
  赋值语句 : 语法合法
  表达式语句 : 语法合法
  赋值语句 : 语法合法
  表达式语句 : 语法合法
  赋值语句 : 语法合法
  表达式语句 : 语法合法
  表达式语句 : 语法合法
  return语句 : 语法合法
  函数定义 : 语法合法
语法分析结束!
====================Parser==================
( self: Sentence null null, father: null, left: null, right: null )
( self: Include null null, father: Sentence, left: null, right: Include )
( self: # SHARP 1_in, father: Include, left: null, right: include )
( self: include INCLUDE 1_in, father: Include, left: #, right: < )
( self: < LT 1_in, father: Include, left: include, right: stdio.h )
( self: stdio.h IDENTIFIER 1_in, father: Include, left: <, right: > )
( self: > GT 1_in, father: Include, left: stdio.h, right: null )
( self: Include null null, father: Sentence, left: Include, right: FunctionStatement )
( self: # SHARP 2_in, father: Include, left: null, right: include )
( self: include INCLUDE 2_in, father: Include, left: #, right: < )
( self: < LT 2_in, father: Include, left: include, right: stdlib.h )
( self: stdlib.h IDENTIFIER 2_in, father: Include, left: <, right: > )
( self: > GT 2_in, father: Include, left: stdlib.h, right: null )
( self: FunctionStatement null null, father: Sentence, left: Include, right: null )
( self: Type null null, father: FunctionStatement, left: null, right: FunctionName )
( self: int FIELD_TYPE 3_fs, father: Type, left: null, right: null )
( self: FunctionName null null, father: FunctionStatement, left: Type, right: StateParameterList )
( self: main IDENTIFIER 3_fs, father: FunctionName, left: null, right: null )
( self: StateParameterList null null, father: FunctionStatement, left: FunctionName, right: Sentence )
( self: Sentence null null, father: FunctionStatement, left: StateParameterList, right: Type )
( self: Statement null null, father: Sentence, left: null, right: Statement )
( self: Type null null, father: Statement, left: null, right: a )
( self: float FIELD_TYPE 3.1_st, father: Type, left: null, right: null )
( self: a IDENTIFIER 3.1_st, father: Statement, left: Type, right: null )
( self: Statement null null, father: Sentence, left: Statement, right: Statement )
( self: Type null null, father: Statement, left: null, right: b )
( self: float FIELD_TYPE null, father: Type, left: null, right: null )
( self: b IDENTIFIER 3.1_st, father: Statement, left: Type, right: null )
( self: Statement null null, father: Sentence, left: Statement, right: Statement )
( self: Type null null, father: Statement, left: null, right: c )
( self: float FIELD_TYPE null, father: Type, left: null, right: null )
( self: c IDENTIFIER 3.1_st, father: Statement, left: Type, right: null )
( self: Statement null null, father: Sentence, left: Statement, right: FunctionCall )
( self: Type null null, father: Statement, left: null, right: d )
( self: float FIELD_TYPE 3.2_st, father: Type, left: null, right: null )
( self: d IDENTIFIER 3.2_st, father: Statement, left: Type, right: null )
( self: FunctionCall null null, father: Sentence, left: Statement, right: FunctionCall )
( self: scanf FUNCTION_NAME 3.3_fc, father: FunctionCall, left: null, right: CallParameterList )
( self: CallParameterList null null, father: FunctionCall, left: scanf, right: null )
( self: %f %f %f %f STRING_CONSTANT 3.3_fc, father: CallParameterList, left: null, right: & )
( self: & BIT_AND 3.3_fc, father: CallParameterList, left: %f %f %f %f, right: a )
( self: a IDENTIFIER 3.3_fc, father: CallParameterList, left: &, right: & )
( self: & BIT_AND 3.3_fc, father: CallParameterList, left: a, right: b )
( self: b IDENTIFIER 3.3_fc, father: CallParameterList, left: &, right: & )
( self: & BIT_AND 3.3_fc, father: CallParameterList, left: b, right: c )
( self: c IDENTIFIER 3.3_fc, father: CallParameterList, left: &, right: & )
( self: & BIT_AND 3.3_fc, father: CallParameterList, left: c, right: d )
( self: d IDENTIFIER 3.3_fc, father: CallParameterList, left: &, right: null )
( self: FunctionCall null null, father: Sentence, left: FunctionCall, right: Assignment )
( self: printf FUNCTION_NAME 3.4_fc, father: FunctionCall, left: null, right: CallParameterList )
( self: CallParameterList null null, father: FunctionCall, left: printf, right: null )
( self: %f %f %f %f STRING_CONSTANT 3.4_fc, father: CallParameterList, left: null, right: a )
( self: a IDENTIFIER 3.4_fc, father: CallParameterList, left: %f %f %f %f, right: b )
( self: b IDENTIFIER 3.4_fc, father: CallParameterList, left: a, right: c )
( self: c IDENTIFIER 3.4_fc, father: CallParameterList, left: b, right: d )
( self: d IDENTIFIER 3.4_fc, father: CallParameterList, left: c, right: null )
( self: Assignment null null, father: Sentence, left: FunctionCall, right: Assignment )
( self: a IDENTIFIER 3.5_as, father: Assignment, left: null, right: Expression )
( self: Expression SingleOrDoubleOperand null, father: Assignment, left: a, right: null )
( self: Expression Constant null, father: Expression, left: null, right: null )
( self: 1.2f _Constant 3.5_ex, father: Expression, left: null, right: null )
( self: Assignment null null, father: Sentence, left: Assignment, right: Assignment )
( self: b IDENTIFIER 3.6_as, father: Assignment, left: null, right: Expression )
( self: Expression SingleOrDoubleOperand null, father: Assignment, left: b, right: null )
( self: Expression Constant null, father: Expression, left: null, right: null )
( self: 1.3F _Constant 3.6_ex, father: Expression, left: null, right: null )
( self: Assignment null null, father: Sentence, left: Assignment, right: Expression )
( self: c IDENTIFIER 3.7_as, father: Assignment, left: null, right: Expression )
( self: Expression SingleOrDoubleOperand null, father: Assignment, left: c, right: null )
( self: Expression Variable null, father: Expression, left: null, right: Expression )
( self: a _Variable 3.7_ex, father: Expression, left: null, right: null )
( self: Expression Variable null, father: Expression, left: Expression, right: Operator )
( self: b _Variable 3.7_ex, father: Expression, left: null, right: null )
( self: Operator Operator null, father: Expression, left: Expression, right: Expression )
( self: * _Operator 3.7_ex, father: Operator, left: null, right: null )
( self: Expression Variable null, father: Expression, left: Operator, right: Operator )
( self: a _Variable 3.7_ex, father: Expression, left: null, right: null )
( self: Operator Operator null, father: Expression, left: Expression, right: null )
( self: + _Operator 3.7_ex, father: Operator, left: null, right: null )
( self: Expression SingleOrDoubleOperand null, father: Sentence, left: Assignment, right: Return )
( self: Expression Variable null, father: Expression, left: null, right: Expression )
( self: a _Variable 3.8_ex, father: Expression, left: null, right: null )
( self: Expression Constant null, father: Expression, left: Expression, right: Operator )
( self: 1 _Constant 3.8_ex, father: Expression, left: null, right: null )
( self: Operator Operator null, father: Expression, left: Expression, right: null )
( self: > _Operator 3.8_ex, father: Operator, left: null, right: null )
( self: Return null null, father: Sentence, left: Expression, right: null )
( self: return RETURN 3.9_re, father: Return, left: null, right: Expression )
( self: Expression SingleOrDoubleOperand null, father: Return, left: return, right: null )
( self: Expression Constant null, father: Expression, left: null, right: null )
( self: 0 _Constant 3.9_ex, father: Expression, left: null, right: null )
( self: Type null null, father: FunctionStatement, left: Sentence, right: FunctionName )
( self: int FIELD_TYPE 5_fs, father: Type, left: null, right: null )
( self: FunctionName null null, father: FunctionStatement, left: Type, right: StateParameterList )
( self: add IDENTIFIER 5_fs, father: FunctionName, left: null, right: null )
( self: StateParameterList null null, father: FunctionStatement, left: FunctionName, right: Sentence )
( self: Sentence null null, father: FunctionStatement, left: StateParameterList, right: Type )
( self: Type null null, father: FunctionStatement, left: Sentence, right: FunctionName )
( self: int FIELD_TYPE 7_fs, father: Type, left: null, right: null )
( self: FunctionName null null, father: FunctionStatement, left: Type, right: StateParameterList )
( self: sub IDENTIFIER 7_fs, father: FunctionName, left: null, right: null )
( self: StateParameterList null null, father: FunctionStatement, left: FunctionName, right: Sentence )
( self: Sentence null null, father: FunctionStatement, left: StateParameterList, right: Type )
( self: Type null null, father: FunctionStatement, left: Sentence, right: FunctionName )
( self: int FIELD_TYPE 9_fs, father: Type, left: null, right: null )
( self: FunctionName null null, father: FunctionStatement, left: Type, right: StateParameterList )
( self: mul IDENTIFIER 9_fs, father: FunctionName, left: null, right: null )
( self: StateParameterList null null, father: FunctionStatement, left: FunctionName, right: Sentence )
( self: Sentence null null, father: FunctionStatement, left: StateParameterList, right: null )

目标码生成开始...
目标码生成结束!
===================Assembler==================

	.section .rodata
	.align 2                                         # 3.3_fc
.LC0:	                                            # 3.3_fc
	.string	"%f %f %f %f"                            # 3.3_fc
	.align 2                                         # 3.4_fc
.LC1:	                                            # 3.4_fc
	.string	"%f %f %f %f"                            # 3.4_fc
	.align 3                                         # 3.5_as
.LC2:	                                            # 3.5_as
	4607182418800017408                              # 3.5_as
	4611686018427387904                              # 3.5_as
	.align 3                                         # 3.6_as
.LC3:	                                            # 3.6_as
	4607182418800017408                              # 3.6_as
	4613937818241073152                              # 3.6_as
	.align 3                                         # 3.8_ex
.LC4:	                                            # 3.8_ex
	1                                                # 3.8_ex
	0                                                # 3.8_ex

	.section ".text"
	.align 2                                         # 3_fs
	.globl main                                      # 3_fs
	.type main, @function                            # 3_fs
main:	                                            # 3_fs
	stwu 1,-32(1)                                    # 3_fs
	mflr 0                                           # 3_fs
	stw 31,28(1)                                     # 3_fs
	stw 0,36(1)                                      # 3_fs
	mr 31,1                                          # 3_fs

	lis 0,.LC0@ha                                    # 3.3_fc
	addic 10,0,.LC0@l                                # 3.3_fc
	mr 3,10                                          # 3.3_fc
	crxor 6,6,6                                      # 3.3_fc
	bl __isoc99_scanf                                # 3.3_fc

	lis 0,.LC1@ha                                    # 3.4_fc
	addic 0,0,.LC1@l                                 # 3.4_fc
	mr 3,0                                           # 3.4_fc
	crxor 6,6,6                                      # 3.4_fc
	bl printf                                        # 3.4_fc

	lis 9,.LC2@ha                                    # 3.5_as
	lfs 0,.LC2@l(9)                                  # 3.5_as
	stfs 0,8(31)                                     # 3.5_as

	lis 9,.LC3@ha                                    # 3.6_as
	lfs 0,.LC3@l(9)                                  # 3.6_as
	stfs 0,12(31)                                    # 3.6_as

	lfs 13,8(31)                                     # 3.7_ex
	lfs 0,12(31)                                     # 3.7_ex
	fmuls 0,13,0                                     # 3.7_ex
	stfs 0,24(31)                                    # 3.7_ex

	lfs 13,24(31)                                    # 3.7_ex
	lfs 0,8(31)                                      # 3.7_ex
	fadds 0,13,0                                     # 3.7_ex
	stfs 0,28(31)                                    # 3.7_ex

	lfs 0,28(31)                                     # 3.7_as
	stfs 0,16(31)                                    # 3.7_as

	lfs 13,8(31)                                     # 3.8_ex
	lis 9,.LC4@ha                                    # 3.8_ex
	lfs 0,.LC4@l(9)                                  # 3.8_ex
	fcmpu 7,0,13                                     # 3.8_ex
	li 0,0                                           # 3.8_ex
	li 9,1                                           # 3.8_ex
	isel 0,9,0,29                                    # 3.8_ex
	stw 0,24(31)                                     # 3.8_ex

	li 0,0                                           # 3.9_re
	mr 3,0                                           # 3.9_re
	lwz 11,0(1)                                      # 3_fs
	lwz 0,4(11)                                      # 3_fs
	mtlr 0                                           # 3_fs
	lwz 31,-4(11)                                    # 3_fs
	mr 1,11                                          # 3_fs
	blr                                              # 3_fs
	.size main,.-main                                # 3_fs

	.section .rodata

	.section ".text"
	.align 2                                         # 5_fs
	.globl add                                       # 5_fs
	.type add, @function                             # 5_fs
add:	                                             # 5_fs
	stwu 1,-32(1)                                    # 5_fs
	stw 31,28(1)                                     # 5_fs
	mr 31,1                                          # 5_fs

	lwz 11,0(1)                                      # 5_fs
	lwz 31,-4(11)                                    # 5_fs
	mr 1,11                                          # 5_fs
	blr                                              # 5_fs
	.size add,.-add                                  # 5_fs

	.section .rodata

	.section ".text"
	.align 2                                         # 7_fs
	.globl sub                                       # 7_fs
	.type sub, @function                             # 7_fs
sub:	                                             # 7_fs
	stwu 1,-32(1)                                    # 7_fs
	stw 31,28(1)                                     # 7_fs
	mr 31,1                                          # 7_fs

	lwz 11,0(1)                                      # 7_fs
	lwz 31,-4(11)                                    # 7_fs
	mr 1,11                                          # 7_fs
	blr                                              # 7_fs
	.size sub,.-sub                                  # 7_fs

	.section .rodata

	.section ".text"
	.align 2                                         # 9_fs
	.globl mul                                       # 9_fs
	.type mul, @function                             # 9_fs
mul:	                                             # 9_fs
	stwu 1,-32(1)                                    # 9_fs
	stw 31,28(1)                                     # 9_fs
	mr 31,1                                          # 9_fs

	lwz 11,0(1)                                      # 9_fs
	lwz 31,-4(11)                                    # 9_fs
	mr 1,11                                          # 9_fs
	blr                                              # 9_fs
	.size mul,.-mul                                  # 9_fs
