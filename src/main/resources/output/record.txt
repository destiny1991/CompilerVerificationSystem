预处理源代码开始...
预处理源代码结束
====================Source C Code==================
#include <stdio.h>
#include <stdlib.h>

int main() {
    int a;
    int b;
    int c;
    int d;


    scanf("%d %d %d %d", &a, &b, &c, &d);

    

    a = b + c - d + a;

    return 0;
}

源代码标号开始...
源代码编号结束!
====================Labeled C Code==================
#include <stdio.h>                                // 1
#include <stdlib.h>                               // 2

int main() {                                      // 3
    int a;                                        // 3.1
    int b;                                        // 3.2
    int c;                                        // 3.3
    int d;                                        // 3.4


    scanf("%d %d %d %d", &a, &b, &c, &d);         // 3.5

    

    a = b + c - d + a;                            // 3.6

    return 0;                                     // 3.7
}                                                 // 4

词法分析开始...
词法分析结束!
====================Lexer==================
(#, SHARP, 1)
(include, INCLUDE, 1)
(<, LT, 1)
(stdio.h, IDENTIFIER, 1)
(>, GT, 1)
(#, SHARP, 2)
(include, INCLUDE, 2)
(<, LT, 2)
(stdlib.h, IDENTIFIER, 2)
(>, GT, 2)
(int, INT, 3)
(main, IDENTIFIER, 3)
((, LL_BRACKET, 3)
(), RL_BRACKET, 3)
({, LB_BRACKET, 3)
(int, INT, 3.1)
(a, IDENTIFIER, 3.1)
(;, SEMICOLON, 3.1)
(int, INT, 3.2)
(b, IDENTIFIER, 3.2)
(;, SEMICOLON, 3.2)
(int, INT, 3.3)
(c, IDENTIFIER, 3.3)
(;, SEMICOLON, 3.3)
(int, INT, 3.4)
(d, IDENTIFIER, 3.4)
(;, SEMICOLON, 3.4)
(scanf, IDENTIFIER, 3.5)
((, LL_BRACKET, 3.5)
(", DOUBLE_QUOTE, 3.5)
(%d %d %d %d, STRING_CONSTANT, 3.5)
(", DOUBLE_QUOTE, 3.5)
(,, COMMA, 3.5)
(&, BIT_AND, 3.5)
(a, IDENTIFIER, 3.5)
(,, COMMA, 3.5)
(&, BIT_AND, 3.5)
(b, IDENTIFIER, 3.5)
(,, COMMA, 3.5)
(&, BIT_AND, 3.5)
(c, IDENTIFIER, 3.5)
(,, COMMA, 3.5)
(&, BIT_AND, 3.5)
(d, IDENTIFIER, 3.5)
(), RL_BRACKET, 3.5)
(;, SEMICOLON, 3.5)
(a, IDENTIFIER, 3.6)
(=, ASSIGN, 3.6)
(b, IDENTIFIER, 3.6)
(+, PLUS, 3.6)
(c, IDENTIFIER, 3.6)
(-, MINUS, 3.6)
(d, IDENTIFIER, 3.6)
(+, PLUS, 3.6)
(a, IDENTIFIER, 3.6)
(;, SEMICOLON, 3.6)
(return, RETURN, 3.7)
(0, DIGIT_CONSTANT, 3.7)
(;, SEMICOLON, 3.7)
(}, RB_BRACKET, 4)

语法分析开始...
  include语句 : 语法合法
  include语句 : 语法合法
  变量声明语句 : 语法合法
  变量声明语句 : 语法合法
  变量声明语句 : 语法合法
  变量声明语句 : 语法合法
  函数调用语句 : 语法合法
  表达式语句 : 语法合法
  赋值语句 : 语法合法
  表达式语句 : 语法合法
  return语句 : 语法合法
  函数定义 : 语法合法
语法分析结束!
====================Parser==================
( self: Sentence null null, father: null, left: null, right: null )
( self: Include null null, father: Sentence, left: null, right: Include )
( self: # SHARP 1, father: Include, left: null, right: include )
( self: include INCLUDE 1, father: Include, left: #, right: < )
( self: < LT 1, father: Include, left: include, right: stdio.h )
( self: stdio.h IDENTIFIER 1, father: Include, left: <, right: > )
( self: > GT 1, father: Include, left: stdio.h, right: null )
( self: Include null null, father: Sentence, left: Include, right: FunctionStatement )
( self: # SHARP 2, father: Include, left: null, right: include )
( self: include INCLUDE 2, father: Include, left: #, right: < )
( self: < LT 2, father: Include, left: include, right: stdlib.h )
( self: stdlib.h IDENTIFIER 2, father: Include, left: <, right: > )
( self: > GT 2, father: Include, left: stdlib.h, right: null )
( self: FunctionStatement null null, father: Sentence, left: Include, right: null )
( self: Type null null, father: FunctionStatement, left: null, right: FunctionName )
( self: int FIELD_TYPE 3, father: Type, left: null, right: null )
( self: FunctionName null null, father: FunctionStatement, left: Type, right: StateParameterList )
( self: main IDENTIFIER 3, father: FunctionName, left: null, right: null )
( self: StateParameterList null null, father: FunctionStatement, left: FunctionName, right: Sentence )
( self: Sentence null null, father: FunctionStatement, left: StateParameterList, right: null )
( self: Statement null null, father: Sentence, left: null, right: Statement )
( self: Type null null, father: Statement, left: null, right: a )
( self: int FIELD_TYPE 3.1, father: Type, left: null, right: null )
( self: a IDENTIFIER 3.1, father: Statement, left: Type, right: null )
( self: Statement null null, father: Sentence, left: Statement, right: Statement )
( self: Type null null, father: Statement, left: null, right: b )
( self: int FIELD_TYPE 3.2, father: Type, left: null, right: null )
( self: b IDENTIFIER 3.2, father: Statement, left: Type, right: null )
( self: Statement null null, father: Sentence, left: Statement, right: Statement )
( self: Type null null, father: Statement, left: null, right: c )
( self: int FIELD_TYPE 3.3, father: Type, left: null, right: null )
( self: c IDENTIFIER 3.3, father: Statement, left: Type, right: null )
( self: Statement null null, father: Sentence, left: Statement, right: FunctionCall )
( self: Type null null, father: Statement, left: null, right: d )
( self: int FIELD_TYPE 3.4, father: Type, left: null, right: null )
( self: d IDENTIFIER 3.4, father: Statement, left: Type, right: null )
( self: FunctionCall null null, father: Sentence, left: Statement, right: Assignment )
( self: scanf FUNCTION_NAME 3.5, father: FunctionCall, left: null, right: CallParameterList )
( self: CallParameterList null null, father: FunctionCall, left: scanf, right: null )
( self: %d %d %d %d STRING_CONSTANT 3.5, father: CallParameterList, left: null, right: & )
( self: & ADDRESS 3.5, father: CallParameterList, left: %d %d %d %d, right: a )
( self: a IDENTIFIER 3.5, father: CallParameterList, left: &, right: & )
( self: & ADDRESS 3.5, father: CallParameterList, left: a, right: b )
( self: b IDENTIFIER 3.5, father: CallParameterList, left: &, right: & )
( self: & ADDRESS 3.5, father: CallParameterList, left: b, right: c )
( self: c IDENTIFIER 3.5, father: CallParameterList, left: &, right: & )
( self: & ADDRESS 3.5, father: CallParameterList, left: c, right: d )
( self: d IDENTIFIER 3.5, father: CallParameterList, left: &, right: null )
( self: Assignment null null, father: Sentence, left: FunctionCall, right: Return )
( self: a IDENTIFIER 3.6, father: Assignment, left: null, right: Expression )
( self: Expression SingleOrDoubleOperand null, father: Assignment, left: a, right: null )
( self: Expression Variable null, father: Expression, left: null, right: Expression )
( self: b _Variable 3.6, father: Expression, left: null, right: null )
( self: Expression Variable null, father: Expression, left: Expression, right: Expression )
( self: c _Variable 3.6, father: Expression, left: null, right: null )
( self: Expression Variable null, father: Expression, left: Expression, right: Expression )
( self: d _Variable 3.6, father: Expression, left: null, right: null )
( self: Expression Variable null, father: Expression, left: Expression, right: Operator )
( self: a _Variable 3.6, father: Expression, left: null, right: null )
( self: Operator Operator null, father: Expression, left: Expression, right: Operator )
( self: + _Operator 3.6, father: Operator, left: null, right: null )
( self: Operator Operator null, father: Expression, left: Operator, right: Operator )
( self: - _Operator 3.6, father: Operator, left: null, right: null )
( self: Operator Operator null, father: Expression, left: Operator, right: null )
( self: + _Operator 3.6, father: Operator, left: null, right: null )
( self: Return null null, father: Sentence, left: Assignment, right: null )
( self: return RETURN 3.7, father: Return, left: null, right: Expression )
( self: Expression SingleOrDoubleOperand null, father: Return, left: return, right: null )
( self: Expression Constant null, father: Expression, left: null, right: null )
( self: 0 _Constant 3.7, father: Expression, left: null, right: null )

目标码生成开始...
目标码生成结束!
===================Assembler==================
	.section .rodata
	.align 2                               # 3.5
.LC0:	                                  # 3.5
	.string	"%d %d %d %d"                  # 3.5

	.section ".text"
	.align 2                               # 3
	.globl main                            # 3
	.type main, @function                  # 3
main:	                                  # 3
	stwu 1,-32(1)                          # 3
	mflr 0                                 # 3
	stw 31,28(1)                           # 3
	stw 0,36(1)                            # 3
	mr 31,1                                # 3

	lis 0,.LC0@ha                          # 3.5
	addic 10,0,.LC0@l                      # 3.5
	mr 3,10                                # 3.5
	addi 11,31,a                           # 3.5
	mr 4,11                                # 3.5
	addi 12,31,b                           # 3.5
	mr 5,12                                # 3.5
	addi 13,31,c                           # 3.5
	mr 6,13                                # 3.5
	addi 14,31,d                           # 3.5
	mr 7,14                                # 3.5
	crxor 6,6,6                            # 3.5
	bl __isoc99_scanf                      # 3.5

	lwz 9,d(31)                            # 3.6
	lwz 0,a(31)                            # 3.6
	add 0,9,0                              # 3.6
	stw 0,bss_tmp1(31)                     # 3.6

	lwz 9,c(31)                            # 3.6
	lwz 0,bss_tmp1(31)                     # 3.6
	subf 0,9,0                             # 3.6
	stw 0,bss_tmp2(31)                     # 3.6

	lwz 9,b(31)                            # 3.6
	lwz 0,bss_tmp2(31)                     # 3.6
	add 0,9,0                              # 3.6
	stw 0,bss_tmp3(31)                     # 3.6

	lwz 0,bss_tmp3(31)                     # 3.6
	stw 0,a(31)                            # 3.6

	li 0,0                                 # 3.7
	mr 3,0                                 # 3.7
	lwz 11,0(1)                            # 3
	lwz 0,4(11)                            # 3
	mtlr 0                                 # 3
	lwz 31,-4(11)                          # 3
	mr 1,11                                # 3
	blr                                    # 3
	.size main,.-main                      # 3
